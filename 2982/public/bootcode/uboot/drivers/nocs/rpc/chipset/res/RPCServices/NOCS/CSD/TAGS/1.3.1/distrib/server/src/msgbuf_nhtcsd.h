/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtcsd.proto
 */

#ifndef _MSGBUF_NHTCSD_H_
#define _MSGBUF_NHTCSD_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "inc/xsd-c.h"

/*****************************************************************************
 * msgbuf message type definition                                            *
 ****************************************************************************/

typedef struct SNhtcsd_BootModeDescType                   TNhtcsd_BootModeDescType;
typedef struct SNhtcsd_EmptyMsg                           TNhtcsd_EmptyMsg;
typedef struct SNhtcsd_OptOutput1InMsg                    TNhtcsd_OptOutput1InMsg;
typedef struct SNhtcsd_CsdStatusOutMsg                    TNhtcsd_CsdStatusOutMsg;
typedef struct SNhtcsd_TestStatusOutMsg                   TNhtcsd_TestStatusOutMsg;
typedef struct SNhtcsd_VersionRevisionOutMsg              TNhtcsd_VersionRevisionOutMsg;
typedef struct SNhtcsd_StringOutMsg                       TNhtcsd_StringOutMsg;
typedef struct SNhtcsd_NumberOutMsg                       TNhtcsd_NumberOutMsg;
typedef struct SNhtcsd_SizeInMsg                          TNhtcsd_SizeInMsg;
typedef struct SNhtcsd_GetSizeInMsg                       TNhtcsd_GetSizeInMsg;
typedef struct SNhtcsd_SizeOutMsg                         TNhtcsd_SizeOutMsg;
typedef struct SNhtcsd_BytesOutMsg                        TNhtcsd_BytesOutMsg;
typedef struct SNhtcsd_BootModeIdInMsg                    TNhtcsd_BootModeIdInMsg;
typedef struct SNhtcsd_BootModeDescOutMsg                 TNhtcsd_BootModeDescOutMsg;
typedef struct SNhtcsd_BootModeDescSetInMsg               TNhtcsd_BootModeDescSetInMsg;
typedef struct SNhtcsd_BootModeDescInMsg                  TNhtcsd_BootModeDescInMsg;
typedef struct SNhtcsd_BootModeDescSetOutMsg              TNhtcsd_BootModeDescSetOutMsg;
typedef struct SNhtcsd_BootModeIdOutMsg                   TNhtcsd_BootModeIdOutMsg;
typedef struct SNhtcsd_ActivationFlagOutMsg               TNhtcsd_ActivationFlagOutMsg;
typedef struct SNhtcsd_ScsTotalAreaSizeOnlyInMsg          TNhtcsd_ScsTotalAreaSizeOnlyInMsg;
typedef struct SNhtcsd_ScsTotalAreaSizeOutMsg             TNhtcsd_ScsTotalAreaSizeOutMsg;
typedef struct SNhtcsd_GetScsPvLenInMsg                   TNhtcsd_GetScsPvLenInMsg;
typedef struct SNhtcsd_GetScsPvInMsg                      TNhtcsd_GetScsPvInMsg;
typedef struct SNhtcsd_SetScsPvInMsg                      TNhtcsd_SetScsPvInMsg;
typedef struct SNhtcsd_BytesInMsg                         TNhtcsd_BytesInMsg;
typedef struct SNhtcsd_VarBytesInMsg                      TNhtcsd_VarBytesInMsg;
typedef struct SNhtcsd_CheckNumberBytesInMsg              TNhtcsd_CheckNumberBytesInMsg;
typedef struct SNhtcsd_CsdDebugInterfaceAccesModeInMsg    TNhtcsd_CsdDebugInterfaceAccesModeInMsg;
typedef struct SNhtcsd_CsdDebugInterfaceAccesModeOutMsg   TNhtcsd_CsdDebugInterfaceAccesModeOutMsg;
typedef struct SNhtcsd_CsdHandleOutMsg                    TNhtcsd_CsdHandleOutMsg;
typedef struct SNhtcsd_CsdBufferHandleOutMsg              TNhtcsd_CsdBufferHandleOutMsg;
typedef struct SNhtcsd_HandleInMsg                        TNhtcsd_HandleInMsg;
typedef struct SNhtcsd_R2rCipherWithClearHostTextKeyInMsg TNhtcsd_R2rCipherWithClearHostTextKeyInMsg;
typedef struct SNhtcsd_R2rCipherWithSecretContentKeyInMsg TNhtcsd_R2rCipherWithSecretContentKeyInMsg;
typedef struct SNhtcsd_R2rMonteCarloParamsInMsg           TNhtcsd_R2rMonteCarloParamsInMsg;
typedef struct SNhtcsd_EcmCallBackInMsg                   TNhtcsd_EcmCallBackInMsg;
typedef struct SNhtcsd_DscTestRunParamInMsg               TNhtcsd_DscTestRunParamInMsg;
typedef struct SNhtcsd_TestRunWaitOnCompletionInMsg       TNhtcsd_TestRunWaitOnCompletionInMsg;
typedef struct SNhtcsd_DscClearTextHostKeyInMsg           TNhtcsd_DscClearTextHostKeyInMsg;
typedef struct SNhtcsd_DscProtectedContentKeyInMsg        TNhtcsd_DscProtectedContentKeyInMsg;
typedef struct SNhtcsd_ScrTestRunParamInMsg               TNhtcsd_ScrTestRunParamInMsg;
typedef struct SNhtcsd_ScrClearTextHostKeyInMsg           TNhtcsd_ScrClearTextHostKeyInMsg;
typedef struct SNhtcsd_ScrProtectedContentKeyInMsg        TNhtcsd_ScrProtectedContentKeyInMsg;


/*****************************************************************************
 * msgbuf enum type definition                                               *
 ****************************************************************************/

typedef enum ENhtcsd_CsdStatus
{
  NHTCSD_CSD_STATUS_NOERROR                       = 0,
  NHTCSD_CSD_STATUS_ERROR                         = 1,
  NHTCSD_CSD_STATUS_ERRORDRIVERALREADYINITIALIZED = 2,
  NHTCSD_CSD_STATUS_ERRORINVALIDPARAMETERS        = 3,
  NHTCSD_CSD_STATUS_ERROROPERATIONNOTALLOWED      = 4,
  NHTCSD_CSD_STATUS_ERROROPERATIONNOTSUPPORTED    = 5,
  NHTCSD_CSD_STATUS_ERRORINVALIDKEYPATHHANDLE     = 6
} TNhtcsd_CsdStatus;

typedef enum ENhtcsd_TestStatus
{
  NHTCSD_TEST_STATUS_NHTCSDTESTNOERROR                     = 0,
  NHTCSD_TEST_STATUS_NHTCSDTESTERROR                       = 1,
  NHTCSD_TEST_STATUS_NHTCSDTESTERRORWOULDBLOCK             = 2,
  NHTCSD_TEST_STATUS_NHTCSDTESTERRORINVALIDPARAMETERS      = 3,
  NHTCSD_TEST_STATUS_NHTCSDTESTERRORINVALIDFILEPATHNAME    = 4,
  NHTCSD_TEST_STATUS_NHTCSDTESTERRORSERVICECURRENTLYINUSED = 5,
  NHTCSD_TEST_STATUS_NHTCSDTESTERRORSERVICERUNFAILLER      = 6
} TNhtcsd_TestStatus;

typedef enum ENhtcsd_ActivationFlag
{
  NHTCSD_ACTIVATION_FLAG_RPCSET    = 0,
  NHTCSD_ACTIVATION_FLAG_RPCNOTSET = 1
} TNhtcsd_ActivationFlag;

typedef enum ENhtcsd_ScsPvId
{
  NHTCSD_SCS_PV_ID_EXTBOOTFLASHDEVPARAMS = 0,
  NHTCSD_SCS_PV_ID_EXTRAMPARAMS          = 1,
  NHTCSD_SCS_PV_ID_SCSTOTALAREASIZE      = 2,
  NHTCSD_SCS_PV_ID_ACTIVEINDICATOR       = 3,
  NHTCSD_SCS_PV_ID_FULLEXTFWUPGRADEADDR  = 4,
  NHTCSD_SCS_PV_ID_FULLEXTFWUPGRADESIZE  = 5,
  NHTCSD_SCS_PV_ID_PATCHEXTFWUPGRADEADDR = 6,
  NHTCSD_SCS_PV_ID_PATCHEXTFWUPGRADESIZE = 7,
  NHTCSD_SCS_PV_ID_VERSIONINGREF         = 8
} TNhtcsd_ScsPvId;

typedef enum ENhtcsd_CsdScsTotalAreaSize
{
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZE16K          = 0,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZE32K          = 1,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZE64K          = 2,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZE128K         = 3,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZE256K         = 4,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZEUNPROGRAMMED = 5,
  NHTCSD_CSD_SCS_TOTAL_AREA_SIZE_SIZENOTSUPPORTED = 6
} TNhtcsd_CsdScsTotalAreaSize;

typedef enum ENhtcsd_CsdDebugInterfaceAccesMode
{
  NHTCSD_CSD_DEBUG_INTERFACE_ACCES_MODE_OPEN              = 0,
  NHTCSD_CSD_DEBUG_INTERFACE_ACCES_MODE_PASSWORDPROTECTED = 1,
  NHTCSD_CSD_DEBUG_INTERFACE_ACCES_MODE_CLOSED            = 2,
  NHTCSD_CSD_DEBUG_INTERFACE_ACCES_MODE_INCONSISTENTSTATE = 3
} TNhtcsd_CsdDebugInterfaceAccesMode;

typedef enum ENhtcsd_CsdR2RAlgorithm
{
  NHTCSD_CSD_R2_RALGORITHM_AES128     = 0,
  NHTCSD_CSD_R2_RALGORITHM_TDESK1K2K1 = 1
} TNhtcsd_CsdR2RAlgorithm;

typedef enum ENhtcsd_CsdR2RCryptoOperationMode
{
  NHTCSD_CSD_R2_RCRYPTO_OPERATION_MODE_ECB = 0,
  NHTCSD_CSD_R2_RCRYPTO_OPERATION_MODE_CBC = 1,
  NHTCSD_CSD_R2_RCRYPTO_OPERATION_MODE_CTR = 2
} TNhtcsd_CsdR2RCryptoOperationMode;


/*****************************************************************************
 * msgbuf message structure definition                                       *
 ****************************************************************************/

struct SNhtcsd_BootModeDescType
{
  TMsgBuf_desc    _pDesc;
  uint32_t        bootModeId;
  char         *  description;
};

struct SNhtcsd_EmptyMsg
{
  TMsgBuf_desc    _pDesc;
};

struct SNhtcsd_OptOutput1InMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_output;
};

struct SNhtcsd_CsdStatusOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
};

struct SNhtcsd_TestStatusOutMsg
{
  TMsgBuf_desc          _pDesc;
  TNhtcsd_TestStatus    retStatus;
};

struct SNhtcsd_VersionRevisionOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  uint32_t             versionRevision;
};

struct SNhtcsd_StringOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  char              *  info;
};

struct SNhtcsd_NumberOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  TMsgBuf_bool         has_value;
  uint32_t             value;
};

struct SNhtcsd_SizeInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        value;
};

struct SNhtcsd_GetSizeInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        value;
  TMsgBuf_bool    has_output;
};

struct SNhtcsd_SizeOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  TMsgBuf_bool         has_value;
  uint32_t             value;
};

struct SNhtcsd_BytesOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  TMsgBuf_bytes        byteArray;
};

struct SNhtcsd_BootModeIdInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         bootModeId;
};

struct SNhtcsd_BootModeDescOutMsg
{
  TMsgBuf_desc                _pDesc;
  TNhtcsd_CsdStatus           retStatus;
  TNhtcsd_BootModeDescType *  bootDesc;
};

struct SNhtcsd_BootModeDescSetInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        bootModeNumber;
  TMsgBuf_bool    has_output1;
  TMsgBuf_bool    has_output2;
};

struct SNhtcsd_BootModeDescInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        bootModeNumber;
  TMsgBuf_bool    has_output;
};

struct SNhtcsd_BootModeDescSetOutMsg
{
  TMsgBuf_desc                _pDesc;
  TNhtcsd_CsdStatus           retStatus;
  size_t                      n_bootDesc;
  TNhtcsd_BootModeDescType ** bootDesc;
};

struct SNhtcsd_BootModeIdOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  TMsgBuf_bool         has_bootModeId;
  uint32_t             bootModeId;
};

struct SNhtcsd_ActivationFlagOutMsg
{
  TMsgBuf_desc              _pDesc;
  TNhtcsd_CsdStatus         retStatus;
  TMsgBuf_bool              has_flag;
  TNhtcsd_ActivationFlag    flag;
};

struct SNhtcsd_ScsTotalAreaSizeOnlyInMsg
{
  TMsgBuf_desc                   _pDesc;
  TNhtcsd_CsdScsTotalAreaSize    areaSize;
};

struct SNhtcsd_ScsTotalAreaSizeOutMsg
{
  TMsgBuf_desc                   _pDesc;
  TNhtcsd_CsdStatus              retStatus;
  TMsgBuf_bool                   has_areaSize;
  TNhtcsd_CsdScsTotalAreaSize    areaSize;
};

struct SNhtcsd_GetScsPvLenInMsg
{
  TMsgBuf_desc       _pDesc;
  TNhtcsd_ScsPvId    pvId;
  TMsgBuf_bool       has_output;
};

struct SNhtcsd_GetScsPvInMsg
{
  TMsgBuf_desc       _pDesc;
  TNhtcsd_ScsPvId    pvId;
  uint32_t           len_output;
  TMsgBuf_bool       has_output;
};

struct SNhtcsd_SetScsPvInMsg
{
  TMsgBuf_desc       _pDesc;
  TNhtcsd_ScsPvId    pvId;
  TMsgBuf_bytes      pvValue;
  uint32_t           len_pvValue;
};

struct SNhtcsd_BytesInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bytes    input;
};

struct SNhtcsd_VarBytesInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bytes    input;
  uint32_t         len_input;
};

struct SNhtcsd_CheckNumberBytesInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bytes    input;
  uint32_t         len_input;
  TMsgBuf_bool     has_output;
};

struct SNhtcsd_CsdDebugInterfaceAccesModeInMsg
{
  TMsgBuf_desc                          _pDesc;
  TNhtcsd_CsdDebugInterfaceAccesMode    mode;
};

struct SNhtcsd_CsdDebugInterfaceAccesModeOutMsg
{
  TMsgBuf_desc                          _pDesc;
  TNhtcsd_CsdStatus                     retStatus;
  TMsgBuf_bool                          has_mode;
  TNhtcsd_CsdDebugInterfaceAccesMode    mode;
};

struct SNhtcsd_CsdHandleOutMsg
{
  TMsgBuf_desc         _pDesc;
  TNhtcsd_CsdStatus    retStatus;
  TMsgBuf_bool         has_handle;
  int64_t              handle;
};

struct SNhtcsd_CsdBufferHandleOutMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtcsd_HandleInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtcsd_R2rCipherWithClearHostTextKeyInMsg
{
  TMsgBuf_desc                         _pDesc;
  TNhtcsd_CsdR2RAlgorithm              algo;
  TNhtcsd_CsdR2RCryptoOperationMode    mode;
  TMsgBuf_bytes                        key;
  uint32_t                             len_key;
  TMsgBuf_bytes                        IV;
  uint32_t                             len_IV;
  TMsgBuf_bool                         refreshIV;
  TMsgBuf_bool                         has_sessionHandle;
  int64_t                              sessionHandle;
  TMsgBuf_bool                         has_inputBufferHandle;
  int64_t                              inputBufferHandle;
  TMsgBuf_bytes                        inputData;
  uint32_t                             len_inputData;
  TMsgBuf_bool                         has_outputBufferHandle;
  int64_t                              outputBufferHandle;
  TMsgBuf_bool                         has_output;
};

struct SNhtcsd_R2rCipherWithSecretContentKeyInMsg
{
  TMsgBuf_desc                         _pDesc;
  TNhtcsd_CsdR2RAlgorithm              algo;
  TNhtcsd_CsdR2RCryptoOperationMode    mode;
  size_t                               n_cipheredProtKeys;
  TMsgBuf_bytes                      * cipheredProtKeys;
  uint32_t                             num_cipheredProtKeys;
  TMsgBuf_bytes                        cipheredContentKey;
  uint32_t                             len_cipheredContentKey;
  TMsgBuf_bytes                        IV;
  uint32_t                             len_IV;
  TMsgBuf_bool                         refreshIV;
  TMsgBuf_bool                         has_sessionHandle;
  int64_t                              sessionHandle;
  TMsgBuf_bool                         has_inputBufferHandle;
  int64_t                              inputBufferHandle;
  TMsgBuf_bytes                        inputData;
  uint32_t                             len_inputData;
  TMsgBuf_bool                         has_outputBufferHandle;
  int64_t                              outputBufferHandle;
  TMsgBuf_bool                         has_output;
};

struct SNhtcsd_R2rMonteCarloParamsInMsg
{
  TMsgBuf_desc                         _pDesc;
  TNhtcsd_CsdR2RAlgorithm              cryptoAlgo;
  TNhtcsd_CsdR2RCryptoOperationMode    cryptoMode;
  TMsgBuf_bool                         isForEncryption;
  TMsgBuf_bool                         useSwKey;
  TMsgBuf_bool                         isMonteCarlo;
  uint32_t                             runNumber;
  TMsgBuf_bytes                        IV;
  uint32_t                             len_IV;
  TMsgBuf_bytes                        dataIn;
  uint32_t                             len_dataIn;
  TMsgBuf_bytes                        clearHostKey;
  uint32_t                             len_clearHostKey;
  size_t                               n_cipheredProtKeys;
  TMsgBuf_bytes                      * cipheredProtKeys;
  uint32_t                             num_cipheredProtKeys;
  TMsgBuf_bytes                        cipheredContentKey;
  uint32_t                             len_cipheredContentKey;
  TMsgBuf_bool                         has_output;
};

struct SNhtcsd_EcmCallBackInMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         tableId;
  TMsgBuf_bool     has_ecmCallBackHandle;
  int64_t          ecmCallBackHandle;
  TMsgBuf_bool     has_testRunHandle;
  int64_t          testRunHandle;
  TMsgBuf_bytes    ecm;
  uint32_t         len_ecm;
};

struct SNhtcsd_DscTestRunParamInMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         emi;
  uint32_t         audioPid;
  uint32_t         videoPid;
  uint32_t         pcrPid;
  TMsgBuf_bool     has_ecmPid;
  uint32_t         ecmPid;
  TMsgBuf_bool     isInClear;
  TMsgBuf_bool     isForEncryption;
  char          *  inputFilePathname;
  char          *  outputFilePathname;
  TMsgBuf_bytes    IV;
  uint32_t         len_IV;
  TMsgBuf_bool     has_ecmCallBack;
  int64_t          ecmCallBack;
  TMsgBuf_bool     has_output;
};

struct SNhtcsd_TestRunWaitOnCompletionInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_testRunHandle;
  int64_t         testRunHandle;
  int32_t         timeout;
};

struct SNhtcsd_DscClearTextHostKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  TMsgBuf_bytes    oddHostKey;
  uint32_t         len_oddHostKey;
  TMsgBuf_bytes    evenHostKey;
  uint32_t         len_evenHostKey;
};

struct SNhtcsd_DscProtectedContentKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  size_t           n_cipheredProtKeys;
  TMsgBuf_bytes  * cipheredProtKeys;
  uint32_t         num_cipheredProtKeys;
  TMsgBuf_bytes    oddContentKey;
  uint32_t         len_oddContentKey;
  TMsgBuf_bytes    evenContentKey;
  uint32_t         len_evenContentKey;
};

struct SNhtcsd_ScrTestRunParamInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        emi;
  uint32_t        audioPid;
  uint32_t        videoPid;
  uint32_t        pcrPid;
  TMsgBuf_bool    isForEncryption;
  char         *  inputFilePathname;
  char         *  outputFilePathname;
  TMsgBuf_bool    has_output;
};

struct SNhtcsd_ScrClearTextHostKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  TMsgBuf_bytes    clearHostKey;
  uint32_t         len_clearHostKey;
  TMsgBuf_bytes    IV;
  uint32_t         len_IV;
};

struct SNhtcsd_ScrProtectedContentKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  size_t           n_cipheredProtKeys;
  TMsgBuf_bytes  * cipheredProtKeys;
  uint32_t         num_cipheredProtKeys;
  TMsgBuf_bytes    cipheredContentKey;
  uint32_t         len_cipheredContentKey;
  TMsgBuf_bytes    IV;
  uint32_t         len_IV;
};


/*****************************************************************************
 * msgbuf Message initialization  function                                   *
 ****************************************************************************/

void init_Nhtcsd_BootModeDescType                   ( TNhtcsd_BootModeDescType                   * pInstance );
void init_Nhtcsd_EmptyMsg                           ( TNhtcsd_EmptyMsg                           * pInstance );
void init_Nhtcsd_OptOutput1InMsg                    ( TNhtcsd_OptOutput1InMsg                    * pInstance );
void init_Nhtcsd_CsdStatusOutMsg                    ( TNhtcsd_CsdStatusOutMsg                    * pInstance );
void init_Nhtcsd_TestStatusOutMsg                   ( TNhtcsd_TestStatusOutMsg                   * pInstance );
void init_Nhtcsd_VersionRevisionOutMsg              ( TNhtcsd_VersionRevisionOutMsg              * pInstance );
void init_Nhtcsd_StringOutMsg                       ( TNhtcsd_StringOutMsg                       * pInstance );
void init_Nhtcsd_NumberOutMsg                       ( TNhtcsd_NumberOutMsg                       * pInstance );
void init_Nhtcsd_SizeInMsg                          ( TNhtcsd_SizeInMsg                          * pInstance );
void init_Nhtcsd_GetSizeInMsg                       ( TNhtcsd_GetSizeInMsg                       * pInstance );
void init_Nhtcsd_SizeOutMsg                         ( TNhtcsd_SizeOutMsg                         * pInstance );
void init_Nhtcsd_BytesOutMsg                        ( TNhtcsd_BytesOutMsg                        * pInstance );
void init_Nhtcsd_BootModeIdInMsg                    ( TNhtcsd_BootModeIdInMsg                    * pInstance );
void init_Nhtcsd_BootModeDescOutMsg                 ( TNhtcsd_BootModeDescOutMsg                 * pInstance );
void init_Nhtcsd_BootModeDescSetInMsg               ( TNhtcsd_BootModeDescSetInMsg               * pInstance );
void init_Nhtcsd_BootModeDescInMsg                  ( TNhtcsd_BootModeDescInMsg                  * pInstance );
void init_Nhtcsd_BootModeDescSetOutMsg              ( TNhtcsd_BootModeDescSetOutMsg              * pInstance );
void init_Nhtcsd_BootModeIdOutMsg                   ( TNhtcsd_BootModeIdOutMsg                   * pInstance );
void init_Nhtcsd_ActivationFlagOutMsg               ( TNhtcsd_ActivationFlagOutMsg               * pInstance );
void init_Nhtcsd_ScsTotalAreaSizeOnlyInMsg          ( TNhtcsd_ScsTotalAreaSizeOnlyInMsg          * pInstance );
void init_Nhtcsd_ScsTotalAreaSizeOutMsg             ( TNhtcsd_ScsTotalAreaSizeOutMsg             * pInstance );
void init_Nhtcsd_GetScsPvLenInMsg                   ( TNhtcsd_GetScsPvLenInMsg                   * pInstance );
void init_Nhtcsd_GetScsPvInMsg                      ( TNhtcsd_GetScsPvInMsg                      * pInstance );
void init_Nhtcsd_SetScsPvInMsg                      ( TNhtcsd_SetScsPvInMsg                      * pInstance );
void init_Nhtcsd_BytesInMsg                         ( TNhtcsd_BytesInMsg                         * pInstance );
void init_Nhtcsd_VarBytesInMsg                      ( TNhtcsd_VarBytesInMsg                      * pInstance );
void init_Nhtcsd_CheckNumberBytesInMsg              ( TNhtcsd_CheckNumberBytesInMsg              * pInstance );
void init_Nhtcsd_CsdDebugInterfaceAccesModeInMsg    ( TNhtcsd_CsdDebugInterfaceAccesModeInMsg    * pInstance );
void init_Nhtcsd_CsdDebugInterfaceAccesModeOutMsg   ( TNhtcsd_CsdDebugInterfaceAccesModeOutMsg   * pInstance );
void init_Nhtcsd_CsdHandleOutMsg                    ( TNhtcsd_CsdHandleOutMsg                    * pInstance );
void init_Nhtcsd_CsdBufferHandleOutMsg              ( TNhtcsd_CsdBufferHandleOutMsg              * pInstance );
void init_Nhtcsd_HandleInMsg                        ( TNhtcsd_HandleInMsg                        * pInstance );
void init_Nhtcsd_R2rCipherWithClearHostTextKeyInMsg ( TNhtcsd_R2rCipherWithClearHostTextKeyInMsg * pInstance );
void init_Nhtcsd_R2rCipherWithSecretContentKeyInMsg ( TNhtcsd_R2rCipherWithSecretContentKeyInMsg * pInstance );
void init_Nhtcsd_R2rMonteCarloParamsInMsg           ( TNhtcsd_R2rMonteCarloParamsInMsg           * pInstance );
void init_Nhtcsd_EcmCallBackInMsg                   ( TNhtcsd_EcmCallBackInMsg                   * pInstance );
void init_Nhtcsd_DscTestRunParamInMsg               ( TNhtcsd_DscTestRunParamInMsg               * pInstance );
void init_Nhtcsd_TestRunWaitOnCompletionInMsg       ( TNhtcsd_TestRunWaitOnCompletionInMsg       * pInstance );
void init_Nhtcsd_DscClearTextHostKeyInMsg           ( TNhtcsd_DscClearTextHostKeyInMsg           * pInstance );
void init_Nhtcsd_DscProtectedContentKeyInMsg        ( TNhtcsd_DscProtectedContentKeyInMsg        * pInstance );
void init_Nhtcsd_ScrTestRunParamInMsg               ( TNhtcsd_ScrTestRunParamInMsg               * pInstance );
void init_Nhtcsd_ScrClearTextHostKeyInMsg           ( TNhtcsd_ScrClearTextHostKeyInMsg           * pInstance );
void init_Nhtcsd_ScrProtectedContentKeyInMsg        ( TNhtcsd_ScrProtectedContentKeyInMsg        * pInstance );

/*****************************************************************************
 * msgbuf Message allocation function prototypes                             *
 ****************************************************************************/

TNhtcsd_BootModeDescType                   * pAlloc_Nhtcsd_BootModeDescType                   (void);
TNhtcsd_EmptyMsg                           * pAlloc_Nhtcsd_EmptyMsg                           (void);
TNhtcsd_OptOutput1InMsg                    * pAlloc_Nhtcsd_OptOutput1InMsg                    (void);
TNhtcsd_CsdStatusOutMsg                    * pAlloc_Nhtcsd_CsdStatusOutMsg                    (void);
TNhtcsd_TestStatusOutMsg                   * pAlloc_Nhtcsd_TestStatusOutMsg                   (void);
TNhtcsd_VersionRevisionOutMsg              * pAlloc_Nhtcsd_VersionRevisionOutMsg              (void);
TNhtcsd_StringOutMsg                       * pAlloc_Nhtcsd_StringOutMsg                       (void);
TNhtcsd_NumberOutMsg                       * pAlloc_Nhtcsd_NumberOutMsg                       (void);
TNhtcsd_SizeInMsg                          * pAlloc_Nhtcsd_SizeInMsg                          (void);
TNhtcsd_GetSizeInMsg                       * pAlloc_Nhtcsd_GetSizeInMsg                       (void);
TNhtcsd_SizeOutMsg                         * pAlloc_Nhtcsd_SizeOutMsg                         (void);
TNhtcsd_BytesOutMsg                        * pAlloc_Nhtcsd_BytesOutMsg                        (void);
TNhtcsd_BootModeIdInMsg                    * pAlloc_Nhtcsd_BootModeIdInMsg                    (void);
TNhtcsd_BootModeDescOutMsg                 * pAlloc_Nhtcsd_BootModeDescOutMsg                 (void);
TNhtcsd_BootModeDescSetInMsg               * pAlloc_Nhtcsd_BootModeDescSetInMsg               (void);
TNhtcsd_BootModeDescInMsg                  * pAlloc_Nhtcsd_BootModeDescInMsg                  (void);
TNhtcsd_BootModeDescSetOutMsg              * pAlloc_Nhtcsd_BootModeDescSetOutMsg              (void);
TNhtcsd_BootModeIdOutMsg                   * pAlloc_Nhtcsd_BootModeIdOutMsg                   (void);
TNhtcsd_ActivationFlagOutMsg               * pAlloc_Nhtcsd_ActivationFlagOutMsg               (void);
TNhtcsd_ScsTotalAreaSizeOnlyInMsg          * pAlloc_Nhtcsd_ScsTotalAreaSizeOnlyInMsg          (void);
TNhtcsd_ScsTotalAreaSizeOutMsg             * pAlloc_Nhtcsd_ScsTotalAreaSizeOutMsg             (void);
TNhtcsd_GetScsPvLenInMsg                   * pAlloc_Nhtcsd_GetScsPvLenInMsg                   (void);
TNhtcsd_GetScsPvInMsg                      * pAlloc_Nhtcsd_GetScsPvInMsg                      (void);
TNhtcsd_SetScsPvInMsg                      * pAlloc_Nhtcsd_SetScsPvInMsg                      (void);
TNhtcsd_BytesInMsg                         * pAlloc_Nhtcsd_BytesInMsg                         (void);
TNhtcsd_VarBytesInMsg                      * pAlloc_Nhtcsd_VarBytesInMsg                      (void);
TNhtcsd_CheckNumberBytesInMsg              * pAlloc_Nhtcsd_CheckNumberBytesInMsg              (void);
TNhtcsd_CsdDebugInterfaceAccesModeInMsg    * pAlloc_Nhtcsd_CsdDebugInterfaceAccesModeInMsg    (void);
TNhtcsd_CsdDebugInterfaceAccesModeOutMsg   * pAlloc_Nhtcsd_CsdDebugInterfaceAccesModeOutMsg   (void);
TNhtcsd_CsdHandleOutMsg                    * pAlloc_Nhtcsd_CsdHandleOutMsg                    (void);
TNhtcsd_CsdBufferHandleOutMsg              * pAlloc_Nhtcsd_CsdBufferHandleOutMsg              (void);
TNhtcsd_HandleInMsg                        * pAlloc_Nhtcsd_HandleInMsg                        (void);
TNhtcsd_R2rCipherWithClearHostTextKeyInMsg * pAlloc_Nhtcsd_R2rCipherWithClearHostTextKeyInMsg (void);
TNhtcsd_R2rCipherWithSecretContentKeyInMsg * pAlloc_Nhtcsd_R2rCipherWithSecretContentKeyInMsg (void);
TNhtcsd_R2rMonteCarloParamsInMsg           * pAlloc_Nhtcsd_R2rMonteCarloParamsInMsg           (void);
TNhtcsd_EcmCallBackInMsg                   * pAlloc_Nhtcsd_EcmCallBackInMsg                   (void);
TNhtcsd_DscTestRunParamInMsg               * pAlloc_Nhtcsd_DscTestRunParamInMsg               (void);
TNhtcsd_TestRunWaitOnCompletionInMsg       * pAlloc_Nhtcsd_TestRunWaitOnCompletionInMsg       (void);
TNhtcsd_DscClearTextHostKeyInMsg           * pAlloc_Nhtcsd_DscClearTextHostKeyInMsg           (void);
TNhtcsd_DscProtectedContentKeyInMsg        * pAlloc_Nhtcsd_DscProtectedContentKeyInMsg        (void);
TNhtcsd_ScrTestRunParamInMsg               * pAlloc_Nhtcsd_ScrTestRunParamInMsg               (void);
TNhtcsd_ScrClearTextHostKeyInMsg           * pAlloc_Nhtcsd_ScrClearTextHostKeyInMsg           (void);
TNhtcsd_ScrProtectedContentKeyInMsg        * pAlloc_Nhtcsd_ScrProtectedContentKeyInMsg        (void);

/*****************************************************************************
 * msgbuf Message deallocation function prototypes                           *
 ****************************************************************************/

void dealloc_Nhtcsd_BootModeDescType                   (TNhtcsd_BootModeDescType                   * pxInstance);
void dealloc_Nhtcsd_EmptyMsg                           (TNhtcsd_EmptyMsg                           * pxInstance);
void dealloc_Nhtcsd_OptOutput1InMsg                    (TNhtcsd_OptOutput1InMsg                    * pxInstance);
void dealloc_Nhtcsd_CsdStatusOutMsg                    (TNhtcsd_CsdStatusOutMsg                    * pxInstance);
void dealloc_Nhtcsd_TestStatusOutMsg                   (TNhtcsd_TestStatusOutMsg                   * pxInstance);
void dealloc_Nhtcsd_VersionRevisionOutMsg              (TNhtcsd_VersionRevisionOutMsg              * pxInstance);
void dealloc_Nhtcsd_StringOutMsg                       (TNhtcsd_StringOutMsg                       * pxInstance);
void dealloc_Nhtcsd_NumberOutMsg                       (TNhtcsd_NumberOutMsg                       * pxInstance);
void dealloc_Nhtcsd_SizeInMsg                          (TNhtcsd_SizeInMsg                          * pxInstance);
void dealloc_Nhtcsd_GetSizeInMsg                       (TNhtcsd_GetSizeInMsg                       * pxInstance);
void dealloc_Nhtcsd_SizeOutMsg                         (TNhtcsd_SizeOutMsg                         * pxInstance);
void dealloc_Nhtcsd_BytesOutMsg                        (TNhtcsd_BytesOutMsg                        * pxInstance);
void dealloc_Nhtcsd_BootModeIdInMsg                    (TNhtcsd_BootModeIdInMsg                    * pxInstance);
void dealloc_Nhtcsd_BootModeDescOutMsg                 (TNhtcsd_BootModeDescOutMsg                 * pxInstance);
void dealloc_Nhtcsd_BootModeDescSetInMsg               (TNhtcsd_BootModeDescSetInMsg               * pxInstance);
void dealloc_Nhtcsd_BootModeDescInMsg                  (TNhtcsd_BootModeDescInMsg                  * pxInstance);
void dealloc_Nhtcsd_BootModeDescSetOutMsg              (TNhtcsd_BootModeDescSetOutMsg              * pxInstance);
void dealloc_Nhtcsd_BootModeIdOutMsg                   (TNhtcsd_BootModeIdOutMsg                   * pxInstance);
void dealloc_Nhtcsd_ActivationFlagOutMsg               (TNhtcsd_ActivationFlagOutMsg               * pxInstance);
void dealloc_Nhtcsd_ScsTotalAreaSizeOnlyInMsg          (TNhtcsd_ScsTotalAreaSizeOnlyInMsg          * pxInstance);
void dealloc_Nhtcsd_ScsTotalAreaSizeOutMsg             (TNhtcsd_ScsTotalAreaSizeOutMsg             * pxInstance);
void dealloc_Nhtcsd_GetScsPvLenInMsg                   (TNhtcsd_GetScsPvLenInMsg                   * pxInstance);
void dealloc_Nhtcsd_GetScsPvInMsg                      (TNhtcsd_GetScsPvInMsg                      * pxInstance);
void dealloc_Nhtcsd_SetScsPvInMsg                      (TNhtcsd_SetScsPvInMsg                      * pxInstance);
void dealloc_Nhtcsd_BytesInMsg                         (TNhtcsd_BytesInMsg                         * pxInstance);
void dealloc_Nhtcsd_VarBytesInMsg                      (TNhtcsd_VarBytesInMsg                      * pxInstance);
void dealloc_Nhtcsd_CheckNumberBytesInMsg              (TNhtcsd_CheckNumberBytesInMsg              * pxInstance);
void dealloc_Nhtcsd_CsdDebugInterfaceAccesModeInMsg    (TNhtcsd_CsdDebugInterfaceAccesModeInMsg    * pxInstance);
void dealloc_Nhtcsd_CsdDebugInterfaceAccesModeOutMsg   (TNhtcsd_CsdDebugInterfaceAccesModeOutMsg   * pxInstance);
void dealloc_Nhtcsd_CsdHandleOutMsg                    (TNhtcsd_CsdHandleOutMsg                    * pxInstance);
void dealloc_Nhtcsd_CsdBufferHandleOutMsg              (TNhtcsd_CsdBufferHandleOutMsg              * pxInstance);
void dealloc_Nhtcsd_HandleInMsg                        (TNhtcsd_HandleInMsg                        * pxInstance);
void dealloc_Nhtcsd_R2rCipherWithClearHostTextKeyInMsg (TNhtcsd_R2rCipherWithClearHostTextKeyInMsg * pxInstance);
void dealloc_Nhtcsd_R2rCipherWithSecretContentKeyInMsg (TNhtcsd_R2rCipherWithSecretContentKeyInMsg * pxInstance);
void dealloc_Nhtcsd_R2rMonteCarloParamsInMsg           (TNhtcsd_R2rMonteCarloParamsInMsg           * pxInstance);
void dealloc_Nhtcsd_EcmCallBackInMsg                   (TNhtcsd_EcmCallBackInMsg                   * pxInstance);
void dealloc_Nhtcsd_DscTestRunParamInMsg               (TNhtcsd_DscTestRunParamInMsg               * pxInstance);
void dealloc_Nhtcsd_TestRunWaitOnCompletionInMsg       (TNhtcsd_TestRunWaitOnCompletionInMsg       * pxInstance);
void dealloc_Nhtcsd_DscClearTextHostKeyInMsg           (TNhtcsd_DscClearTextHostKeyInMsg           * pxInstance);
void dealloc_Nhtcsd_DscProtectedContentKeyInMsg        (TNhtcsd_DscProtectedContentKeyInMsg        * pxInstance);
void dealloc_Nhtcsd_ScrTestRunParamInMsg               (TNhtcsd_ScrTestRunParamInMsg               * pxInstance);
void dealloc_Nhtcsd_ScrClearTextHostKeyInMsg           (TNhtcsd_ScrClearTextHostKeyInMsg           * pxInstance);
void dealloc_Nhtcsd_ScrProtectedContentKeyInMsg        (TNhtcsd_ScrProtectedContentKeyInMsg        * pxInstance);

/*****************************************************************************
 * msgbuf enum test function prototype                                       *
 ****************************************************************************/

int isValid_Nhtcsd_CsdStatus                  (TNhtcsd_CsdStatus                  xValue);
int isValid_Nhtcsd_TestStatus                 (TNhtcsd_TestStatus                 xValue);
int isValid_Nhtcsd_ActivationFlag             (TNhtcsd_ActivationFlag             xValue);
int isValid_Nhtcsd_ScsPvId                    (TNhtcsd_ScsPvId                    xValue);
int isValid_Nhtcsd_CsdScsTotalAreaSize        (TNhtcsd_CsdScsTotalAreaSize        xValue);
int isValid_Nhtcsd_CsdDebugInterfaceAccesMode (TNhtcsd_CsdDebugInterfaceAccesMode xValue);
int isValid_Nhtcsd_CsdR2RAlgorithm            (TNhtcsd_CsdR2RAlgorithm            xValue);
int isValid_Nhtcsd_CsdR2RCryptoOperationMode  (TNhtcsd_CsdR2RCryptoOperationMode  xValue);

#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _MSGBUF_NHTCSD_H_ */

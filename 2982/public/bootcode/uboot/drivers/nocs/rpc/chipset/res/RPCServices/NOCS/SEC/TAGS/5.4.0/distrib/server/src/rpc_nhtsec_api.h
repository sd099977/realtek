/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtsec.proto
 */

#ifndef _RPC_API_NHTSEC_H_
#define _RPC_API_NHTSEC_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "src/msgbuf_nhtsec.h"


/* RPC method: rpc_nhtsec_hc_nht_initialize
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_initialize (
  TMsgBuf_rpcHandler        xRpcHandler,
  const TNhtsec_EmptyMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg   ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_terminate
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_terminate (
  TMsgBuf_rpcHandler        xRpcHandler,
  const TNhtsec_EmptyMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg   ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getFunctionTable
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getFunctionTable (
  TMsgBuf_rpcHandler        xRpcHandler,
  const TNhtsec_EmptyMsg  * pxInputMessage,
  TNhtsec_SecTableOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getNuid
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getNuid (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getLegacyNuid
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getLegacyNuid (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getNuid64
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getNuid64 (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getChipsetRevision
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getChipsetRevision (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getChipsetExtension
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getChipsetExtension (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getLegacyChipsetRevision
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getLegacyChipsetRevision (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getSecSoftwareVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getSecSoftwareVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_ValueOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getNhtSecSoftwareVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getNhtSecSoftwareVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_ValueOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_getNhtSecApiVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_getNhtSecApiVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_ValueOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_encryptData
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_encryptData (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_CryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg              ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_legacyEncryptData
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_legacyEncryptData (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_CryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg              ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_decryptData
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_decryptData (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_CryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg              ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_legacyDecryptData
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_legacyDecryptData (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_CryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg              ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_doMonteCarloTest
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_doMonteCarloTest (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtsec_R2rMonteCarloRunInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaGenerateKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaGenerateKey (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_RsaGenKeyInMsg  * pxInputMessage,
  TNhtsec_RsaGenKeyOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaPublicEncrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaPublicEncrypt (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtsec_RsaPublicEncryptInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaPrivateEncrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaPrivateEncrypt (
  TMsgBuf_rpcHandler                      xRpcHandler,
  const TNhtsec_RsaPrivateEncryptInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                  ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaPublicDecrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaPublicDecrypt (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtsec_RsaPublicDecryptInMsg  * pxInputMessage,
  TNhtsec_RsaDecryptOutMsg            ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaPrivateDecrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaPrivateDecrypt (
  TMsgBuf_rpcHandler                      xRpcHandler,
  const TNhtsec_RsaPrivateDecryptInMsg  * pxInputMessage,
  TNhtsec_RsaDecryptOutMsg             ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_rsaComputeCrtParams
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_rsaComputeCrtParams (
  TMsgBuf_rpcHandler                        xRpcHandler,
  const TNhtsec_RsaComputeCrtParamsInMsg  * pxInputMessage,
  TNhtsec_RsaComputeCrtParamsOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_dhGenerateKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_dhGenerateKey (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_DhGenerateKeyInMsg  * pxInputMessage,
  TNhtsec_DhGenerateKeyOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_dhComputeKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_dhComputeKey (
  TMsgBuf_rpcHandler                 xRpcHandler,
  const TNhtsec_DhComputeKeyInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg             ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha1Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha1Init (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha1Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha1Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_ShaUpdateInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha1Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha1Final (
  TMsgBuf_rpcHandler             xRpcHandler,
  const TNhtsec_ShaFinalInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha256Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha256Init (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha256Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha256Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_ShaUpdateInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha256Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha256Final (
  TMsgBuf_rpcHandler             xRpcHandler,
  const TNhtsec_ShaFinalInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha384Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha384Init (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha384Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha384Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_ShaUpdateInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sha384Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sha384Final (
  TMsgBuf_rpcHandler             xRpcHandler,
  const TNhtsec_ShaFinalInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_hmacSha256Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_hmacSha256Init (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_HmacShaInitInMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_hmacSha256Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_hmacSha256Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_ShaUpdateInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_hmacSha256Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_hmacSha256Final (
  TMsgBuf_rpcHandler             xRpcHandler,
  const TNhtsec_ShaFinalInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_generateRandomBytes
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_generateRandomBytes (
  TMsgBuf_rpcHandler                        xRpcHandler,
  const TNhtsec_GenerateRandomBytesInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                    ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_ecdsaGenerateKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_ecdsaGenerateKey (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtsec_EcdsaGenerateKeyInMsg  * pxInputMessage,
  TNhtsec_EcdsaGenerateKeyOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_ecdsaSign
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_ecdsaSign (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_EcdsaSignInMsg  * pxInputMessage,
  TNhtsec_EcdsaSignOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_ecdsaVerify
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_ecdsaVerify (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_EcdsaVerifyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_ecdhGenerateKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_ecdhGenerateKey (
  TMsgBuf_rpcHandler                 xRpcHandler,
  const TNhtsec_EcdhGenerateInMsg  * pxInputMessage,
  TNhtsec_EcdhGenerateOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_ecdhComputeKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_ecdhComputeKey (
  TMsgBuf_rpcHandler                   xRpcHandler,
  const TNhtsec_EcdhComputeKeyInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg               ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openRam2RamEncryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openRam2RamEncryptSession (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openRam2RamDecryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openRam2RamDecryptSession (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_OptOutput1InMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_closeSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_closeSession (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtsec_HandleInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_setClearTextKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_setClearTextKey (
  TMsgBuf_rpcHandler                    xRpcHandler,
  const TNhtsec_SetClearTextKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg               ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_set2LevelProtectedKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_set2LevelProtectedKey (
  TMsgBuf_rpcHandler                          xRpcHandler,
  const TNhtsec_Set2LevelProtectedKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg                     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_useCertKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_useCertKey (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtsec_UseCertKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_useFlashProtKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_useFlashProtKey (
  TMsgBuf_rpcHandler                    xRpcHandler,
  const TNhtsec_UseFlashProtKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg               ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sessionEncrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sessionEncrypt (
  TMsgBuf_rpcHandler                         xRpcHandler,
  const TNhtsec_SessionCryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_sessionDecrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_sessionDecrypt (
  TMsgBuf_rpcHandler                         xRpcHandler,
  const TNhtsec_SessionCryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg                     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_encryptFlashProtKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_encryptFlashProtKey (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtsec_CryptoProcessInMsg  * pxInputMessage,
  TNhtsec_BytesOutMsg              ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openStreamEncryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openStreamEncryptSession (
  TMsgBuf_rpcHandler                      xRpcHandler,
  const TNhtsec_StreamSessionOpenInMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openStreamDecryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openStreamDecryptSession (
  TMsgBuf_rpcHandler                      xRpcHandler,
  const TNhtsec_StreamSessionOpenInMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_set0LevelProtectedKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_set0LevelProtectedKey (
  TMsgBuf_rpcHandler                          xRpcHandler,
  const TNhtsec_Set0LevelProtectedKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg                     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_set1LevelProtectedKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_set1LevelProtectedKey (
  TMsgBuf_rpcHandler                          xRpcHandler,
  const TNhtsec_Set1LevelProtectedKeyInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg                     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_setMetadata
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_setMetadata (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_SetMetadataInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_allocateBuffer
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_allocateBuffer (
  TMsgBuf_rpcHandler         xRpcHandler,
  const TNhtsec_SizeInMsg  * pxInputMessage,
  TNhtsec_HandleOutMsg    ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_freeBuffer
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_freeBuffer (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtsec_HandleInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_useLegacyKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_useLegacyKey (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtsec_HandleInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_setInitValue
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_setInitValue (
  TMsgBuf_rpcHandler          xRpcHandler,
  const TNhtsec_SetIvInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg     ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openDscTransportSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openDscTransportSession (
  TMsgBuf_rpcHandler                            xRpcHandler,
  const TNhtsec_OpenDscTransportSessionInMsg  * pxInputMessage,
  TNhtsec_TransportIdOutMsg                  ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_openScrTransportSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_openScrTransportSession (
  TMsgBuf_rpcHandler                            xRpcHandler,
  const TNhtsec_OpenScrTransportSessionInMsg  * pxInputMessage,
  TNhtsec_TransportIdOutMsg                  ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_startTransportSessionStreaming
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_startTransportSessionStreaming (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_TransportIdInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_waitOnTransportSessionStreamingCompletion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_waitOnTransportSessionStreamingCompletion (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtsec_WaitOnCompletionInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg                ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_stopTransportSessionStreaming
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_stopTransportSessionStreaming (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_TransportIdInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_hc_nht_closeTransportSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtsec_hc_nht_closeTransportSession (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtsec_TransportIdInMsg  * pxInputMessage,
  TNhtsec_StatusOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtsec_tn_ecmCallBack
 *
 * This method stands as an asynchronous notification function.
 * Caller of this function immediately returns without waiting
 * the completion of its remote execution.
 *
 * PS: param 'pxOutputMessage' is always assumed to be NULL.
 */
TRpc_status rpc_nhtsec_tn_ecmCallBack (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtsec_EcmCallBackMsg  * pxInputMessage,
  TNhtsec_EmptyMsg             ** pxOutputMessage );



#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _RPC_API_NHTSEC_H_ */

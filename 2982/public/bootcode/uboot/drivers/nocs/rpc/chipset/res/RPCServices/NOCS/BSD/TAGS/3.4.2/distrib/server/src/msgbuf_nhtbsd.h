/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtbsd.proto
 */

#ifndef _MSGBUF_NHTBSD_H_
#define _MSGBUF_NHTBSD_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "inc/xsd-c.h"

/*****************************************************************************
 * msgbuf message type definition                                            *
 ****************************************************************************/

typedef struct SNhtbsd_EmptyMsg                 TNhtbsd_EmptyMsg;
typedef struct SNhtbsd_BsdStatusOutMsg          TNhtbsd_BsdStatusOutMsg;
typedef struct SNhtbsd_OptOutput1InMsg          TNhtbsd_OptOutput1InMsg;
typedef struct SNhtbsd_StringInMsg              TNhtbsd_StringInMsg;
typedef struct SNhtbsd_StringOutMsg             TNhtbsd_StringOutMsg;
typedef struct SNhtbsd_String4OutMsg            TNhtbsd_String4OutMsg;
typedef struct SNhtbsd_VersionRevisionOutMsg    TNhtbsd_VersionRevisionOutMsg;
typedef struct SNhtbsd_NumberOutMsg             TNhtbsd_NumberOutMsg;
typedef struct SNhtbsd_SizeInMsg                TNhtbsd_SizeInMsg;
typedef struct SNhtbsd_BytesOutMsg              TNhtbsd_BytesOutMsg;
typedef struct SNhtbsd_BytesInMsg               TNhtbsd_BytesInMsg;
typedef struct SNhtbsd_CheckNumberBytesInMsg    TNhtbsd_CheckNumberBytesInMsg;
typedef struct SNhtbsd_HandleOutMsg             TNhtbsd_HandleOutMsg;
typedef struct SNhtbsd_HandleInMsg              TNhtbsd_HandleInMsg;
typedef struct SNhtbsd_EncryptFlashProtKeyInMsg TNhtbsd_EncryptFlashProtKeyInMsg;
typedef struct SNhtbsd_ClearTextKeyInMsg        TNhtbsd_ClearTextKeyInMsg;
typedef struct SNhtbsd_Level2ProtectedKeyInMsg  TNhtbsd_Level2ProtectedKeyInMsg;
typedef struct SNhtbsd_FlashProtectingKeyInMsg  TNhtbsd_FlashProtectingKeyInMsg;
typedef struct SNhtbsd_CertKeyInMsg             TNhtbsd_CertKeyInMsg;
typedef struct SNhtbsd_R2rCipherInMsg           TNhtbsd_R2rCipherInMsg;
typedef struct SNhtbsd_R2rLegacyOperationInMsg  TNhtbsd_R2rLegacyOperationInMsg;
typedef struct SNhtbsd_RsaPublicEncryptInMsg    TNhtbsd_RsaPublicEncryptInMsg;
typedef struct SNhtbsd_RsaPublicDecryptInMsg    TNhtbsd_RsaPublicDecryptInMsg;
typedef struct SNhtbsd_ShaUpdateInMsg           TNhtbsd_ShaUpdateInMsg;
typedef struct SNhtbsd_ShaTerminateInMsg        TNhtbsd_ShaTerminateInMsg;
typedef struct SNhtbsd_HmacShaInitInMsg         TNhtbsd_HmacShaInitInMsg;
typedef struct SNhtbsd_RandomInMsg              TNhtbsd_RandomInMsg;
typedef struct SNhtbsd_R2rMonteCarloParamsInMsg TNhtbsd_R2rMonteCarloParamsInMsg;


/*****************************************************************************
 * msgbuf enum type definition                                               *
 ****************************************************************************/


/*****************************************************************************
 * msgbuf message structure definition                                       *
 ****************************************************************************/

struct SNhtbsd_EmptyMsg
{
  TMsgBuf_desc    _pDesc;
};

struct SNhtbsd_BsdStatusOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
};

struct SNhtbsd_OptOutput1InMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_output;
};

struct SNhtbsd_StringInMsg
{
  TMsgBuf_desc    _pDesc;
  char         *  info;
};

struct SNhtbsd_StringOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  char         *  info;
};

struct SNhtbsd_String4OutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  char         *  info1;
  char         *  info2;
  char         *  info3;
  char         *  info4;
};

struct SNhtbsd_VersionRevisionOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  uint32_t        versionRevision;
};

struct SNhtbsd_NumberOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_value;
  uint32_t        value;
};

struct SNhtbsd_SizeInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        value;
};

struct SNhtbsd_BytesOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    byteArray;
};

struct SNhtbsd_BytesInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bytes    input;
};

struct SNhtbsd_CheckNumberBytesInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bytes    input;
  uint32_t         len_input;
  TMsgBuf_bool     has_output;
};

struct SNhtbsd_HandleOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtbsd_HandleInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtbsd_EncryptFlashProtKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_inputBufferHandle;
  int64_t          inputBufferHandle;
  TMsgBuf_bytes    input;
  uint32_t         len_input;
  TMsgBuf_bool     has_outputBufferHandle;
  int64_t          outputBufferHandle;
  TMsgBuf_bool     has_output;
};

struct SNhtbsd_ClearTextKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  uint32_t         emi;
  uint32_t         keySize;
  TMsgBuf_bool     has_keyHandle;
  int64_t          keyHandle;
  TMsgBuf_bytes    key;
};

struct SNhtbsd_Level2ProtectedKeyInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  uint32_t         emi;
  TMsgBuf_bool     has_cipheredContentKeyHandle;
  int64_t          cipheredContentKeyHandle;
  uint32_t         cipheredContentKeySize;
  TMsgBuf_bytes    cipheredContentKey;
  uint32_t         cipheredProtectingKeySize;
  TMsgBuf_bool     has_l1CipheredProtectingKeyHandle;
  int64_t          l1CipheredProtectingKeyHandle;
  TMsgBuf_bytes    l1CipheredProtectingKey;
  TMsgBuf_bool     has_l2CipheredProtectingKeyHandle;
  int64_t          l2CipheredProtectingKeyHandle;
  TMsgBuf_bytes    l2CipheredProtectingKey;
};

struct SNhtbsd_FlashProtectingKeyInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  uint32_t        emi;
};

struct SNhtbsd_CertKeyInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  uint32_t        emi;
};

struct SNhtbsd_R2rCipherInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  TMsgBuf_bool     has_inputBufferHandle;
  int64_t          inputBufferHandle;
  TMsgBuf_bytes    input;
  uint32_t         inputSize;
  TMsgBuf_bool     has_outputBufferHandle;
  int64_t          outputBufferHandle;
  TMsgBuf_bool     has_output;
  TMsgBuf_bool     has_ivBufferHandle;
  int64_t          ivBufferHandle;
  uint32_t         ivSize;
  TMsgBuf_bytes    iv;
};

struct SNhtbsd_R2rLegacyOperationInMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          algo;
  TMsgBuf_bool     has_inputBufferHandle;
  int64_t          inputBufferHandle;
  TMsgBuf_bytes    input;
  TMsgBuf_bool     has_outputBufferHandle;
  int64_t          outputBufferHandle;
  uint32_t         inputSize;
  TMsgBuf_bool     has_output;
};

struct SNhtbsd_RsaPublicEncryptInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_inputBufferHandle;
  int64_t          inputBufferHandle;
  TMsgBuf_bytes    input;
  uint32_t         inputSize;
  TMsgBuf_bool     has_outputBufferHandle;
  int64_t          outputBufferHandle;
  TMsgBuf_bool     has_output;
  int32_t          keySize;
  uint32_t         e;
  TMsgBuf_bool     has_nHandle;
  int64_t          nHandle;
  TMsgBuf_bytes    n;
  int32_t          padding;
};

struct SNhtbsd_RsaPublicDecryptInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_inputBufferHandle;
  int64_t          inputBufferHandle;
  TMsgBuf_bytes    input;
  TMsgBuf_bool     has_outputBufferHandle;
  int64_t          outputBufferHandle;
  TMsgBuf_bool     has_outputSize;
  TMsgBuf_bool     has_output;
  int32_t          keySize;
  uint32_t         e;
  TMsgBuf_bool     has_nHandle;
  int64_t          nHandle;
  TMsgBuf_bytes    n;
  int32_t          padding;
};

struct SNhtbsd_ShaUpdateInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  TMsgBuf_bool     has_chunkBufferHandle;
  int64_t          chunkBufferHandle;
  int32_t          chunkSize;
  TMsgBuf_bytes    chunk;
};

struct SNhtbsd_ShaTerminateInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  TMsgBuf_bool    has_outputBufferHandle;
  int64_t         outputBufferHandle;
  TMsgBuf_bool    has_output;
};

struct SNhtbsd_HmacShaInitInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_keyHandle;
  int64_t          keyHandle;
  uint32_t         keySize;
  TMsgBuf_bytes    key;
  TMsgBuf_bool     has_output;
};

struct SNhtbsd_RandomInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_randomBufferHandle;
  int64_t         randomBufferHandle;
  uint32_t        randomSize;
  TMsgBuf_bool    has_output;
};

struct SNhtbsd_R2rMonteCarloParamsInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_sessionHandle;
  int64_t          sessionHandle;
  uint32_t         emi;
  TMsgBuf_bool     isLegacy;
  int32_t          cryptoAlgo;
  int32_t          cryptoMode;
  TMsgBuf_bool     isForEncryption;
  int32_t          keyringType;
  TMsgBuf_bool     isMonteCarlo;
  uint32_t         runNumber;
  TMsgBuf_bytes    IV;
  uint32_t         len_IV;
  TMsgBuf_bytes    dataIn;
  uint32_t         len_dataIn;
  TMsgBuf_bool     has_output;
  TMsgBuf_bool     hasIvEmulation;
  TMsgBuf_bool     useDriverAlloc;
};


/*****************************************************************************
 * msgbuf Message initialization  function                                   *
 ****************************************************************************/

void init_Nhtbsd_EmptyMsg                 ( TNhtbsd_EmptyMsg                 * pInstance );
void init_Nhtbsd_BsdStatusOutMsg          ( TNhtbsd_BsdStatusOutMsg          * pInstance );
void init_Nhtbsd_OptOutput1InMsg          ( TNhtbsd_OptOutput1InMsg          * pInstance );
void init_Nhtbsd_StringInMsg              ( TNhtbsd_StringInMsg              * pInstance );
void init_Nhtbsd_StringOutMsg             ( TNhtbsd_StringOutMsg             * pInstance );
void init_Nhtbsd_String4OutMsg            ( TNhtbsd_String4OutMsg            * pInstance );
void init_Nhtbsd_VersionRevisionOutMsg    ( TNhtbsd_VersionRevisionOutMsg    * pInstance );
void init_Nhtbsd_NumberOutMsg             ( TNhtbsd_NumberOutMsg             * pInstance );
void init_Nhtbsd_SizeInMsg                ( TNhtbsd_SizeInMsg                * pInstance );
void init_Nhtbsd_BytesOutMsg              ( TNhtbsd_BytesOutMsg              * pInstance );
void init_Nhtbsd_BytesInMsg               ( TNhtbsd_BytesInMsg               * pInstance );
void init_Nhtbsd_CheckNumberBytesInMsg    ( TNhtbsd_CheckNumberBytesInMsg    * pInstance );
void init_Nhtbsd_HandleOutMsg             ( TNhtbsd_HandleOutMsg             * pInstance );
void init_Nhtbsd_HandleInMsg              ( TNhtbsd_HandleInMsg              * pInstance );
void init_Nhtbsd_EncryptFlashProtKeyInMsg ( TNhtbsd_EncryptFlashProtKeyInMsg * pInstance );
void init_Nhtbsd_ClearTextKeyInMsg        ( TNhtbsd_ClearTextKeyInMsg        * pInstance );
void init_Nhtbsd_Level2ProtectedKeyInMsg  ( TNhtbsd_Level2ProtectedKeyInMsg  * pInstance );
void init_Nhtbsd_FlashProtectingKeyInMsg  ( TNhtbsd_FlashProtectingKeyInMsg  * pInstance );
void init_Nhtbsd_CertKeyInMsg             ( TNhtbsd_CertKeyInMsg             * pInstance );
void init_Nhtbsd_R2rCipherInMsg           ( TNhtbsd_R2rCipherInMsg           * pInstance );
void init_Nhtbsd_R2rLegacyOperationInMsg  ( TNhtbsd_R2rLegacyOperationInMsg  * pInstance );
void init_Nhtbsd_RsaPublicEncryptInMsg    ( TNhtbsd_RsaPublicEncryptInMsg    * pInstance );
void init_Nhtbsd_RsaPublicDecryptInMsg    ( TNhtbsd_RsaPublicDecryptInMsg    * pInstance );
void init_Nhtbsd_ShaUpdateInMsg           ( TNhtbsd_ShaUpdateInMsg           * pInstance );
void init_Nhtbsd_ShaTerminateInMsg        ( TNhtbsd_ShaTerminateInMsg        * pInstance );
void init_Nhtbsd_HmacShaInitInMsg         ( TNhtbsd_HmacShaInitInMsg         * pInstance );
void init_Nhtbsd_RandomInMsg              ( TNhtbsd_RandomInMsg              * pInstance );
void init_Nhtbsd_R2rMonteCarloParamsInMsg ( TNhtbsd_R2rMonteCarloParamsInMsg * pInstance );

/*****************************************************************************
 * msgbuf Message allocation function prototypes                             *
 ****************************************************************************/

TNhtbsd_EmptyMsg                 * pAlloc_Nhtbsd_EmptyMsg                 (void);
TNhtbsd_BsdStatusOutMsg          * pAlloc_Nhtbsd_BsdStatusOutMsg          (void);
TNhtbsd_OptOutput1InMsg          * pAlloc_Nhtbsd_OptOutput1InMsg          (void);
TNhtbsd_StringInMsg              * pAlloc_Nhtbsd_StringInMsg              (void);
TNhtbsd_StringOutMsg             * pAlloc_Nhtbsd_StringOutMsg             (void);
TNhtbsd_String4OutMsg            * pAlloc_Nhtbsd_String4OutMsg            (void);
TNhtbsd_VersionRevisionOutMsg    * pAlloc_Nhtbsd_VersionRevisionOutMsg    (void);
TNhtbsd_NumberOutMsg             * pAlloc_Nhtbsd_NumberOutMsg             (void);
TNhtbsd_SizeInMsg                * pAlloc_Nhtbsd_SizeInMsg                (void);
TNhtbsd_BytesOutMsg              * pAlloc_Nhtbsd_BytesOutMsg              (void);
TNhtbsd_BytesInMsg               * pAlloc_Nhtbsd_BytesInMsg               (void);
TNhtbsd_CheckNumberBytesInMsg    * pAlloc_Nhtbsd_CheckNumberBytesInMsg    (void);
TNhtbsd_HandleOutMsg             * pAlloc_Nhtbsd_HandleOutMsg             (void);
TNhtbsd_HandleInMsg              * pAlloc_Nhtbsd_HandleInMsg              (void);
TNhtbsd_EncryptFlashProtKeyInMsg * pAlloc_Nhtbsd_EncryptFlashProtKeyInMsg (void);
TNhtbsd_ClearTextKeyInMsg        * pAlloc_Nhtbsd_ClearTextKeyInMsg        (void);
TNhtbsd_Level2ProtectedKeyInMsg  * pAlloc_Nhtbsd_Level2ProtectedKeyInMsg  (void);
TNhtbsd_FlashProtectingKeyInMsg  * pAlloc_Nhtbsd_FlashProtectingKeyInMsg  (void);
TNhtbsd_CertKeyInMsg             * pAlloc_Nhtbsd_CertKeyInMsg             (void);
TNhtbsd_R2rCipherInMsg           * pAlloc_Nhtbsd_R2rCipherInMsg           (void);
TNhtbsd_R2rLegacyOperationInMsg  * pAlloc_Nhtbsd_R2rLegacyOperationInMsg  (void);
TNhtbsd_RsaPublicEncryptInMsg    * pAlloc_Nhtbsd_RsaPublicEncryptInMsg    (void);
TNhtbsd_RsaPublicDecryptInMsg    * pAlloc_Nhtbsd_RsaPublicDecryptInMsg    (void);
TNhtbsd_ShaUpdateInMsg           * pAlloc_Nhtbsd_ShaUpdateInMsg           (void);
TNhtbsd_ShaTerminateInMsg        * pAlloc_Nhtbsd_ShaTerminateInMsg        (void);
TNhtbsd_HmacShaInitInMsg         * pAlloc_Nhtbsd_HmacShaInitInMsg         (void);
TNhtbsd_RandomInMsg              * pAlloc_Nhtbsd_RandomInMsg              (void);
TNhtbsd_R2rMonteCarloParamsInMsg * pAlloc_Nhtbsd_R2rMonteCarloParamsInMsg (void);

/*****************************************************************************
 * msgbuf Message deallocation function prototypes                           *
 ****************************************************************************/

void dealloc_Nhtbsd_EmptyMsg                 (TNhtbsd_EmptyMsg                 * pxInstance);
void dealloc_Nhtbsd_BsdStatusOutMsg          (TNhtbsd_BsdStatusOutMsg          * pxInstance);
void dealloc_Nhtbsd_OptOutput1InMsg          (TNhtbsd_OptOutput1InMsg          * pxInstance);
void dealloc_Nhtbsd_StringInMsg              (TNhtbsd_StringInMsg              * pxInstance);
void dealloc_Nhtbsd_StringOutMsg             (TNhtbsd_StringOutMsg             * pxInstance);
void dealloc_Nhtbsd_String4OutMsg            (TNhtbsd_String4OutMsg            * pxInstance);
void dealloc_Nhtbsd_VersionRevisionOutMsg    (TNhtbsd_VersionRevisionOutMsg    * pxInstance);
void dealloc_Nhtbsd_NumberOutMsg             (TNhtbsd_NumberOutMsg             * pxInstance);
void dealloc_Nhtbsd_SizeInMsg                (TNhtbsd_SizeInMsg                * pxInstance);
void dealloc_Nhtbsd_BytesOutMsg              (TNhtbsd_BytesOutMsg              * pxInstance);
void dealloc_Nhtbsd_BytesInMsg               (TNhtbsd_BytesInMsg               * pxInstance);
void dealloc_Nhtbsd_CheckNumberBytesInMsg    (TNhtbsd_CheckNumberBytesInMsg    * pxInstance);
void dealloc_Nhtbsd_HandleOutMsg             (TNhtbsd_HandleOutMsg             * pxInstance);
void dealloc_Nhtbsd_HandleInMsg              (TNhtbsd_HandleInMsg              * pxInstance);
void dealloc_Nhtbsd_EncryptFlashProtKeyInMsg (TNhtbsd_EncryptFlashProtKeyInMsg * pxInstance);
void dealloc_Nhtbsd_ClearTextKeyInMsg        (TNhtbsd_ClearTextKeyInMsg        * pxInstance);
void dealloc_Nhtbsd_Level2ProtectedKeyInMsg  (TNhtbsd_Level2ProtectedKeyInMsg  * pxInstance);
void dealloc_Nhtbsd_FlashProtectingKeyInMsg  (TNhtbsd_FlashProtectingKeyInMsg  * pxInstance);
void dealloc_Nhtbsd_CertKeyInMsg             (TNhtbsd_CertKeyInMsg             * pxInstance);
void dealloc_Nhtbsd_R2rCipherInMsg           (TNhtbsd_R2rCipherInMsg           * pxInstance);
void dealloc_Nhtbsd_R2rLegacyOperationInMsg  (TNhtbsd_R2rLegacyOperationInMsg  * pxInstance);
void dealloc_Nhtbsd_RsaPublicEncryptInMsg    (TNhtbsd_RsaPublicEncryptInMsg    * pxInstance);
void dealloc_Nhtbsd_RsaPublicDecryptInMsg    (TNhtbsd_RsaPublicDecryptInMsg    * pxInstance);
void dealloc_Nhtbsd_ShaUpdateInMsg           (TNhtbsd_ShaUpdateInMsg           * pxInstance);
void dealloc_Nhtbsd_ShaTerminateInMsg        (TNhtbsd_ShaTerminateInMsg        * pxInstance);
void dealloc_Nhtbsd_HmacShaInitInMsg         (TNhtbsd_HmacShaInitInMsg         * pxInstance);
void dealloc_Nhtbsd_RandomInMsg              (TNhtbsd_RandomInMsg              * pxInstance);
void dealloc_Nhtbsd_R2rMonteCarloParamsInMsg (TNhtbsd_R2rMonteCarloParamsInMsg * pxInstance);

/*****************************************************************************
 * msgbuf enum test function prototype                                       *
 ****************************************************************************/


#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _MSGBUF_NHTBSD_H_ */

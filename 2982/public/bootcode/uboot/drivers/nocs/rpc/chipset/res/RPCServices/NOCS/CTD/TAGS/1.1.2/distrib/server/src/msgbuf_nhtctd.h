/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtctd.proto
 */

#ifndef _MSGBUF_NHTCTD_H_
#define _MSGBUF_NHTCTD_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "inc/xsd-c.h"

/*****************************************************************************
 * msgbuf message type definition                                            *
 ****************************************************************************/

typedef struct SNhtctd_EmptyMsg                        TNhtctd_EmptyMsg;
typedef struct SNhtctd_IntValueInMsg                   TNhtctd_IntValueInMsg;
typedef struct SNhtctd_IntValueOutMsg                  TNhtctd_IntValueOutMsg;
typedef struct SNhtctd_OptOutput1InMsg                 TNhtctd_OptOutput1InMsg;
typedef struct SNhtctd_CtdStatusOutMsg                 TNhtctd_CtdStatusOutMsg;
typedef struct SNhtctd_BooleanOutMsg                   TNhtctd_BooleanOutMsg;
typedef struct SNhtctd_StringOutMsg                    TNhtctd_StringOutMsg;
typedef struct SNhtctd_GetFlashSizeInMsg               TNhtctd_GetFlashSizeInMsg;
typedef struct SNhtctd_GetRamSizeInMsg                 TNhtctd_GetRamSizeInMsg;
typedef struct SNhtctd_MemorySizeOutMsg                TNhtctd_MemorySizeOutMsg;
typedef struct SNhtctd_FlashReadInMsg                  TNhtctd_FlashReadInMsg;
typedef struct SNhtctd_FlashWriteInMsg                 TNhtctd_FlashWriteInMsg;
typedef struct SNhtctd_RamReadInMsg                    TNhtctd_RamReadInMsg;
typedef struct SNhtctd_RamWriteInMsg                   TNhtctd_RamWriteInMsg;
typedef struct SNhtctd_BytesOutMsg                     TNhtctd_BytesOutMsg;
typedef struct SNhtctd_GetPvStatusInMsg                TNhtctd_GetPvStatusInMsg;
typedef struct SNhtctd_GetBufferSizeInMsg              TNhtctd_GetBufferSizeInMsg;
typedef struct SNhtctd_GetOtpValueMaskInMsg            TNhtctd_GetOtpValueMaskInMsg;
typedef struct SNhtctd_SetPvValueInMsg                 TNhtctd_SetPvValueInMsg;
typedef struct SNhtctd_SetOtpValueInMsg                TNhtctd_SetOtpValueInMsg;
typedef struct SNhtctd_GetPvValueInMsg                 TNhtctd_GetPvValueInMsg;
typedef struct SNhtctd_GetHandleInMsg                  TNhtctd_GetHandleInMsg;
typedef struct SNhtctd_HandleOutMsg                    TNhtctd_HandleOutMsg;
typedef struct SNhtctd_HandleInMsg                     TNhtctd_HandleInMsg;
typedef struct SNhtctd_PvDescriptorMessage             TNhtctd_PvDescriptorMessage;
typedef struct SNhtctd_GetPvDescriptorSetInMsg         TNhtctd_GetPvDescriptorSetInMsg;
typedef struct SNhtctd_GetPvDescriptorSetOutMsg        TNhtctd_GetPvDescriptorSetOutMsg;
typedef struct SNhtctd_R2rSetProtectedKeysInMsg        TNhtctd_R2rSetProtectedKeysInMsg;
typedef struct SNhtctd_R2rSessionCipheringInMsg        TNhtctd_R2rSessionCipheringInMsg;
typedef struct SNhtctd_EcmCallBackInMsg                TNhtctd_EcmCallBackInMsg;
typedef struct SNhtctd_DscSessionParamsMsg             TNhtctd_DscSessionParamsMsg;
typedef struct SNhtctd_OpenDscSessionInMsg             TNhtctd_OpenDscSessionInMsg;
typedef struct SNhtctd_WaitOnCsdSessionCompletionInMsg TNhtctd_WaitOnCsdSessionCompletionInMsg;
typedef struct SNhtctd_SetDscProtectedKeysInMsg        TNhtctd_SetDscProtectedKeysInMsg;
typedef struct SNhtctd_ScrSessionParamsMsg             TNhtctd_ScrSessionParamsMsg;
typedef struct SNhtctd_OpenScrSessionInMsg             TNhtctd_OpenScrSessionInMsg;
typedef struct SNhtctd_SetScrProtectedKeysInMsg        TNhtctd_SetScrProtectedKeysInMsg;


/*****************************************************************************
 * msgbuf enum type definition                                               *
 ****************************************************************************/


/*****************************************************************************
 * msgbuf message structure definition                                       *
 ****************************************************************************/

struct SNhtctd_EmptyMsg
{
  TMsgBuf_desc    _pDesc;
};

struct SNhtctd_IntValueInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         value;
};

struct SNhtctd_IntValueOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_value;
  int32_t         value;
};

struct SNhtctd_OptOutput1InMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_CtdStatusOutMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        retStatus;
};

struct SNhtctd_BooleanOutMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        retStatus;
  TMsgBuf_bool    boolean;
};

struct SNhtctd_StringOutMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        retStatus;
  char         *  info;
};

struct SNhtctd_GetFlashSizeInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         flashId;
  TMsgBuf_bool    hasSizeOutput;
};

struct SNhtctd_GetRamSizeInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    hasSizeOutput;
};

struct SNhtctd_MemorySizeOutMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        retStatus;
  TMsgBuf_bool    has_memorySize;
  int64_t         memorySize;
};

struct SNhtctd_FlashReadInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         flashId;
  int64_t         flashAddress;
  int64_t         dataSize;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_FlashWriteInMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          flashId;
  int64_t          flashAddress;
  int64_t          dataSize;
  TMsgBuf_bytes    dataIn;
};

struct SNhtctd_RamReadInMsg
{
  TMsgBuf_desc    _pDesc;
  int64_t         ramAddress;
  int64_t         dataSize;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_RamWriteInMsg
{
  TMsgBuf_desc     _pDesc;
  int64_t          ramAddress;
  int64_t          dataSize;
  TMsgBuf_bytes    dataIn;
};

struct SNhtctd_BytesOutMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         retStatus;
  TMsgBuf_bytes    dataOut;
};

struct SNhtctd_GetPvStatusInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         pvId;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_GetBufferSizeInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         pvId;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_GetOtpValueMaskInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         pvId;
  uint32_t        pvBufferSize;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_SetPvValueInMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          pvId;
  uint32_t         bufferSize;
  TMsgBuf_bytes    value;
};

struct SNhtctd_SetOtpValueInMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          pvId;
  uint32_t         bufferSize;
  TMsgBuf_bytes    value;
  TMsgBuf_bytes    mask;
};

struct SNhtctd_GetPvValueInMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         pvId;
  uint32_t        bufferSize;
  TMsgBuf_bool    has_output_value;
};

struct SNhtctd_GetHandleInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_output;
};

struct SNhtctd_HandleOutMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        retStatus;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtctd_HandleInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtctd_PvDescriptorMessage
{
  TMsgBuf_desc    _pDesc;
  uint32_t        pvId;
  char         *  pvIdName;
};

struct SNhtctd_GetPvDescriptorSetInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        pvDescNumber;
  TMsgBuf_bool    has_descoutput;
  TMsgBuf_bool    has_descEffNumberOutput;
};

struct SNhtctd_GetPvDescriptorSetOutMsg
{
  TMsgBuf_desc                   _pDesc;
  uint32_t                       retStatus;
  size_t                         n_pvDescriptors;
  TNhtctd_PvDescriptorMessage ** pvDescriptors;
  TMsgBuf_bool                   has_descEffNumber;
  uint32_t                       descEffNumber;
};

struct SNhtctd_R2rSetProtectedKeysInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_sessionHandle;
  int64_t          sessionHandle;
  uint32_t         keyEmi;
  int32_t          contentKeySize;
  TMsgBuf_bytes    contentKey;
  int32_t          protectedKeySize;
  TMsgBuf_bytes    l1ProtectedKey;
  TMsgBuf_bytes    l2ProtectedKey;
};

struct SNhtctd_R2rSessionCipheringInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_sessionHandle;
  int64_t          sessionHandle;
  uint32_t         emi;
  uint32_t         dataSize;
  TMsgBuf_bytes    input;
  TMsgBuf_bool     has_dataOutput;
  uint32_t         ivSize;
  TMsgBuf_bytes    iv;
};

struct SNhtctd_EcmCallBackInMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         tableId;
  TMsgBuf_bool     has_ecmCallBackHandle;
  int64_t          ecmCallBackHandle;
  TMsgBuf_bool     has_testRunHandle;
  int64_t          testRunHandle;
  TMsgBuf_bytes    ecm;
  uint32_t         len_ecm;
};

struct SNhtctd_DscSessionParamsMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         emi;
  int32_t          audioPid;
  int32_t          videoPid;
  int32_t          pcrPid;
  TMsgBuf_bool     isInClear;
  TMsgBuf_bool     isForEncryption;
  int32_t          ecmPid;
  char          *  pInputFilePathname;
  char          *  pOutputFilePathname;
  uint32_t         ivSize;
  TMsgBuf_bytes    iv;
  TMsgBuf_bool     has_ecmCallBack;
  int64_t          ecmCallBack;
};

struct SNhtctd_OpenDscSessionInMsg
{
  TMsgBuf_desc                   _pDesc;
  TNhtctd_DscSessionParamsMsg *  pParams;
  TMsgBuf_bool                   has_output;
};

struct SNhtctd_WaitOnCsdSessionCompletionInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_sessionHandle;
  int64_t         sessionHandle;
  int32_t         timeout;
};

struct SNhtctd_SetDscProtectedKeysInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_sessionHandle;
  int64_t          sessionHandle;
  uint32_t         keyEmi;
  int32_t          protectedKeySize;
  TMsgBuf_bytes    l1ProtectedKey;
  TMsgBuf_bytes    l2ProtectedKey;
  int32_t          oddContentKeySize;
  TMsgBuf_bytes    oddContentKey;
  int32_t          evenContentKeySize;
  TMsgBuf_bytes    evenContentKey;
};

struct SNhtctd_ScrSessionParamsMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        emi;
  int32_t         audioPid;
  int32_t         videoPid;
  int32_t         pcrPid;
  char         *  pInputFilePathname;
  char         *  pOutputFilePathname;
  TMsgBuf_bool    isForEncryption;
};

struct SNhtctd_OpenScrSessionInMsg
{
  TMsgBuf_desc                   _pDesc;
  TNhtctd_ScrSessionParamsMsg *  pParams;
  TMsgBuf_bool                   has_output;
};

struct SNhtctd_SetScrProtectedKeysInMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_sessionHandle;
  int64_t          sessionHandle;
  uint32_t         keyEmi;
  int32_t          protectedKeySize;
  TMsgBuf_bytes    l1ProtectedKey;
  TMsgBuf_bytes    l2ProtectedKey;
  int32_t          contentKeySize;
  TMsgBuf_bytes    contentKey;
  int32_t          ivSize;
  TMsgBuf_bytes    iv;
};


/*****************************************************************************
 * msgbuf Message initialization  function                                   *
 ****************************************************************************/

void init_Nhtctd_EmptyMsg                        ( TNhtctd_EmptyMsg                        * pInstance );
void init_Nhtctd_IntValueInMsg                   ( TNhtctd_IntValueInMsg                   * pInstance );
void init_Nhtctd_IntValueOutMsg                  ( TNhtctd_IntValueOutMsg                  * pInstance );
void init_Nhtctd_OptOutput1InMsg                 ( TNhtctd_OptOutput1InMsg                 * pInstance );
void init_Nhtctd_CtdStatusOutMsg                 ( TNhtctd_CtdStatusOutMsg                 * pInstance );
void init_Nhtctd_BooleanOutMsg                   ( TNhtctd_BooleanOutMsg                   * pInstance );
void init_Nhtctd_StringOutMsg                    ( TNhtctd_StringOutMsg                    * pInstance );
void init_Nhtctd_GetFlashSizeInMsg               ( TNhtctd_GetFlashSizeInMsg               * pInstance );
void init_Nhtctd_GetRamSizeInMsg                 ( TNhtctd_GetRamSizeInMsg                 * pInstance );
void init_Nhtctd_MemorySizeOutMsg                ( TNhtctd_MemorySizeOutMsg                * pInstance );
void init_Nhtctd_FlashReadInMsg                  ( TNhtctd_FlashReadInMsg                  * pInstance );
void init_Nhtctd_FlashWriteInMsg                 ( TNhtctd_FlashWriteInMsg                 * pInstance );
void init_Nhtctd_RamReadInMsg                    ( TNhtctd_RamReadInMsg                    * pInstance );
void init_Nhtctd_RamWriteInMsg                   ( TNhtctd_RamWriteInMsg                   * pInstance );
void init_Nhtctd_BytesOutMsg                     ( TNhtctd_BytesOutMsg                     * pInstance );
void init_Nhtctd_GetPvStatusInMsg                ( TNhtctd_GetPvStatusInMsg                * pInstance );
void init_Nhtctd_GetBufferSizeInMsg              ( TNhtctd_GetBufferSizeInMsg              * pInstance );
void init_Nhtctd_GetOtpValueMaskInMsg            ( TNhtctd_GetOtpValueMaskInMsg            * pInstance );
void init_Nhtctd_SetPvValueInMsg                 ( TNhtctd_SetPvValueInMsg                 * pInstance );
void init_Nhtctd_SetOtpValueInMsg                ( TNhtctd_SetOtpValueInMsg                * pInstance );
void init_Nhtctd_GetPvValueInMsg                 ( TNhtctd_GetPvValueInMsg                 * pInstance );
void init_Nhtctd_GetHandleInMsg                  ( TNhtctd_GetHandleInMsg                  * pInstance );
void init_Nhtctd_HandleOutMsg                    ( TNhtctd_HandleOutMsg                    * pInstance );
void init_Nhtctd_HandleInMsg                     ( TNhtctd_HandleInMsg                     * pInstance );
void init_Nhtctd_PvDescriptorMessage             ( TNhtctd_PvDescriptorMessage             * pInstance );
void init_Nhtctd_GetPvDescriptorSetInMsg         ( TNhtctd_GetPvDescriptorSetInMsg         * pInstance );
void init_Nhtctd_GetPvDescriptorSetOutMsg        ( TNhtctd_GetPvDescriptorSetOutMsg        * pInstance );
void init_Nhtctd_R2rSetProtectedKeysInMsg        ( TNhtctd_R2rSetProtectedKeysInMsg        * pInstance );
void init_Nhtctd_R2rSessionCipheringInMsg        ( TNhtctd_R2rSessionCipheringInMsg        * pInstance );
void init_Nhtctd_EcmCallBackInMsg                ( TNhtctd_EcmCallBackInMsg                * pInstance );
void init_Nhtctd_DscSessionParamsMsg             ( TNhtctd_DscSessionParamsMsg             * pInstance );
void init_Nhtctd_OpenDscSessionInMsg             ( TNhtctd_OpenDscSessionInMsg             * pInstance );
void init_Nhtctd_WaitOnCsdSessionCompletionInMsg ( TNhtctd_WaitOnCsdSessionCompletionInMsg * pInstance );
void init_Nhtctd_SetDscProtectedKeysInMsg        ( TNhtctd_SetDscProtectedKeysInMsg        * pInstance );
void init_Nhtctd_ScrSessionParamsMsg             ( TNhtctd_ScrSessionParamsMsg             * pInstance );
void init_Nhtctd_OpenScrSessionInMsg             ( TNhtctd_OpenScrSessionInMsg             * pInstance );
void init_Nhtctd_SetScrProtectedKeysInMsg        ( TNhtctd_SetScrProtectedKeysInMsg        * pInstance );

/*****************************************************************************
 * msgbuf Message allocation function prototypes                             *
 ****************************************************************************/

TNhtctd_EmptyMsg                        * pAlloc_Nhtctd_EmptyMsg                        (void);
TNhtctd_IntValueInMsg                   * pAlloc_Nhtctd_IntValueInMsg                   (void);
TNhtctd_IntValueOutMsg                  * pAlloc_Nhtctd_IntValueOutMsg                  (void);
TNhtctd_OptOutput1InMsg                 * pAlloc_Nhtctd_OptOutput1InMsg                 (void);
TNhtctd_CtdStatusOutMsg                 * pAlloc_Nhtctd_CtdStatusOutMsg                 (void);
TNhtctd_BooleanOutMsg                   * pAlloc_Nhtctd_BooleanOutMsg                   (void);
TNhtctd_StringOutMsg                    * pAlloc_Nhtctd_StringOutMsg                    (void);
TNhtctd_GetFlashSizeInMsg               * pAlloc_Nhtctd_GetFlashSizeInMsg               (void);
TNhtctd_GetRamSizeInMsg                 * pAlloc_Nhtctd_GetRamSizeInMsg                 (void);
TNhtctd_MemorySizeOutMsg                * pAlloc_Nhtctd_MemorySizeOutMsg                (void);
TNhtctd_FlashReadInMsg                  * pAlloc_Nhtctd_FlashReadInMsg                  (void);
TNhtctd_FlashWriteInMsg                 * pAlloc_Nhtctd_FlashWriteInMsg                 (void);
TNhtctd_RamReadInMsg                    * pAlloc_Nhtctd_RamReadInMsg                    (void);
TNhtctd_RamWriteInMsg                   * pAlloc_Nhtctd_RamWriteInMsg                   (void);
TNhtctd_BytesOutMsg                     * pAlloc_Nhtctd_BytesOutMsg                     (void);
TNhtctd_GetPvStatusInMsg                * pAlloc_Nhtctd_GetPvStatusInMsg                (void);
TNhtctd_GetBufferSizeInMsg              * pAlloc_Nhtctd_GetBufferSizeInMsg              (void);
TNhtctd_GetOtpValueMaskInMsg            * pAlloc_Nhtctd_GetOtpValueMaskInMsg            (void);
TNhtctd_SetPvValueInMsg                 * pAlloc_Nhtctd_SetPvValueInMsg                 (void);
TNhtctd_SetOtpValueInMsg                * pAlloc_Nhtctd_SetOtpValueInMsg                (void);
TNhtctd_GetPvValueInMsg                 * pAlloc_Nhtctd_GetPvValueInMsg                 (void);
TNhtctd_GetHandleInMsg                  * pAlloc_Nhtctd_GetHandleInMsg                  (void);
TNhtctd_HandleOutMsg                    * pAlloc_Nhtctd_HandleOutMsg                    (void);
TNhtctd_HandleInMsg                     * pAlloc_Nhtctd_HandleInMsg                     (void);
TNhtctd_PvDescriptorMessage             * pAlloc_Nhtctd_PvDescriptorMessage             (void);
TNhtctd_GetPvDescriptorSetInMsg         * pAlloc_Nhtctd_GetPvDescriptorSetInMsg         (void);
TNhtctd_GetPvDescriptorSetOutMsg        * pAlloc_Nhtctd_GetPvDescriptorSetOutMsg        (void);
TNhtctd_R2rSetProtectedKeysInMsg        * pAlloc_Nhtctd_R2rSetProtectedKeysInMsg        (void);
TNhtctd_R2rSessionCipheringInMsg        * pAlloc_Nhtctd_R2rSessionCipheringInMsg        (void);
TNhtctd_EcmCallBackInMsg                * pAlloc_Nhtctd_EcmCallBackInMsg                (void);
TNhtctd_DscSessionParamsMsg             * pAlloc_Nhtctd_DscSessionParamsMsg             (void);
TNhtctd_OpenDscSessionInMsg             * pAlloc_Nhtctd_OpenDscSessionInMsg             (void);
TNhtctd_WaitOnCsdSessionCompletionInMsg * pAlloc_Nhtctd_WaitOnCsdSessionCompletionInMsg (void);
TNhtctd_SetDscProtectedKeysInMsg        * pAlloc_Nhtctd_SetDscProtectedKeysInMsg        (void);
TNhtctd_ScrSessionParamsMsg             * pAlloc_Nhtctd_ScrSessionParamsMsg             (void);
TNhtctd_OpenScrSessionInMsg             * pAlloc_Nhtctd_OpenScrSessionInMsg             (void);
TNhtctd_SetScrProtectedKeysInMsg        * pAlloc_Nhtctd_SetScrProtectedKeysInMsg        (void);

/*****************************************************************************
 * msgbuf Message deallocation function prototypes                           *
 ****************************************************************************/

void dealloc_Nhtctd_EmptyMsg                        (TNhtctd_EmptyMsg                        * pxInstance);
void dealloc_Nhtctd_IntValueInMsg                   (TNhtctd_IntValueInMsg                   * pxInstance);
void dealloc_Nhtctd_IntValueOutMsg                  (TNhtctd_IntValueOutMsg                  * pxInstance);
void dealloc_Nhtctd_OptOutput1InMsg                 (TNhtctd_OptOutput1InMsg                 * pxInstance);
void dealloc_Nhtctd_CtdStatusOutMsg                 (TNhtctd_CtdStatusOutMsg                 * pxInstance);
void dealloc_Nhtctd_BooleanOutMsg                   (TNhtctd_BooleanOutMsg                   * pxInstance);
void dealloc_Nhtctd_StringOutMsg                    (TNhtctd_StringOutMsg                    * pxInstance);
void dealloc_Nhtctd_GetFlashSizeInMsg               (TNhtctd_GetFlashSizeInMsg               * pxInstance);
void dealloc_Nhtctd_GetRamSizeInMsg                 (TNhtctd_GetRamSizeInMsg                 * pxInstance);
void dealloc_Nhtctd_MemorySizeOutMsg                (TNhtctd_MemorySizeOutMsg                * pxInstance);
void dealloc_Nhtctd_FlashReadInMsg                  (TNhtctd_FlashReadInMsg                  * pxInstance);
void dealloc_Nhtctd_FlashWriteInMsg                 (TNhtctd_FlashWriteInMsg                 * pxInstance);
void dealloc_Nhtctd_RamReadInMsg                    (TNhtctd_RamReadInMsg                    * pxInstance);
void dealloc_Nhtctd_RamWriteInMsg                   (TNhtctd_RamWriteInMsg                   * pxInstance);
void dealloc_Nhtctd_BytesOutMsg                     (TNhtctd_BytesOutMsg                     * pxInstance);
void dealloc_Nhtctd_GetPvStatusInMsg                (TNhtctd_GetPvStatusInMsg                * pxInstance);
void dealloc_Nhtctd_GetBufferSizeInMsg              (TNhtctd_GetBufferSizeInMsg              * pxInstance);
void dealloc_Nhtctd_GetOtpValueMaskInMsg            (TNhtctd_GetOtpValueMaskInMsg            * pxInstance);
void dealloc_Nhtctd_SetPvValueInMsg                 (TNhtctd_SetPvValueInMsg                 * pxInstance);
void dealloc_Nhtctd_SetOtpValueInMsg                (TNhtctd_SetOtpValueInMsg                * pxInstance);
void dealloc_Nhtctd_GetPvValueInMsg                 (TNhtctd_GetPvValueInMsg                 * pxInstance);
void dealloc_Nhtctd_GetHandleInMsg                  (TNhtctd_GetHandleInMsg                  * pxInstance);
void dealloc_Nhtctd_HandleOutMsg                    (TNhtctd_HandleOutMsg                    * pxInstance);
void dealloc_Nhtctd_HandleInMsg                     (TNhtctd_HandleInMsg                     * pxInstance);
void dealloc_Nhtctd_PvDescriptorMessage             (TNhtctd_PvDescriptorMessage             * pxInstance);
void dealloc_Nhtctd_GetPvDescriptorSetInMsg         (TNhtctd_GetPvDescriptorSetInMsg         * pxInstance);
void dealloc_Nhtctd_GetPvDescriptorSetOutMsg        (TNhtctd_GetPvDescriptorSetOutMsg        * pxInstance);
void dealloc_Nhtctd_R2rSetProtectedKeysInMsg        (TNhtctd_R2rSetProtectedKeysInMsg        * pxInstance);
void dealloc_Nhtctd_R2rSessionCipheringInMsg        (TNhtctd_R2rSessionCipheringInMsg        * pxInstance);
void dealloc_Nhtctd_EcmCallBackInMsg                (TNhtctd_EcmCallBackInMsg                * pxInstance);
void dealloc_Nhtctd_DscSessionParamsMsg             (TNhtctd_DscSessionParamsMsg             * pxInstance);
void dealloc_Nhtctd_OpenDscSessionInMsg             (TNhtctd_OpenDscSessionInMsg             * pxInstance);
void dealloc_Nhtctd_WaitOnCsdSessionCompletionInMsg (TNhtctd_WaitOnCsdSessionCompletionInMsg * pxInstance);
void dealloc_Nhtctd_SetDscProtectedKeysInMsg        (TNhtctd_SetDscProtectedKeysInMsg        * pxInstance);
void dealloc_Nhtctd_ScrSessionParamsMsg             (TNhtctd_ScrSessionParamsMsg             * pxInstance);
void dealloc_Nhtctd_OpenScrSessionInMsg             (TNhtctd_OpenScrSessionInMsg             * pxInstance);
void dealloc_Nhtctd_SetScrProtectedKeysInMsg        (TNhtctd_SetScrProtectedKeysInMsg        * pxInstance);

/*****************************************************************************
 * msgbuf enum test function prototype                                       *
 ****************************************************************************/


#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _MSGBUF_NHTCTD_H_ */

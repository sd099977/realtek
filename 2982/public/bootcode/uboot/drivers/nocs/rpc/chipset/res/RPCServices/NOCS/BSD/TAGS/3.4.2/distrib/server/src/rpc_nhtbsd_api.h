/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtbsd.proto
 */

#ifndef _RPC_API_NHTBSD_H_
#define _RPC_API_NHTBSD_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "src/msgbuf_nhtbsd.h"


/* RPC method: rpc_nhtbsd_hc_nhtbsd_initialize
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nhtbsd_initialize (
  TMsgBuf_rpcHandler         xRpcHandler,
  const TNhtbsd_EmptyMsg   * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nhtbsd_terminate
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nhtbsd_terminate (
  TMsgBuf_rpcHandler         xRpcHandler,
  const TNhtbsd_EmptyMsg   * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getNhtBsdApiVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getNhtBsdApiVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_VersionRevisionOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getBsdApiVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getBsdApiVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_VersionRevisionOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getNhtBsdSoftwareVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getNhtBsdSoftwareVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getBsdSoftwareVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getBsdSoftwareVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getBsdStatusOffsetValue
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getBsdStatusOffsetValue (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_NumberOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getNocsCertificationVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getNocsCertificationVersion (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_VersionRevisionOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getChipsetInfo
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getChipsetInfo (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_String4OutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getChipManufacturerName
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getChipManufacturerName (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getChipName
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getChipName (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_StringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_getProtectingKeyNumber
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_getProtectingKeyNumber (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_NumberOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getNuid
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getNuid (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getNuid64
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getNuid64 (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_setStbCaSn
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_setStbCaSn (
  TMsgBuf_rpcHandler          xRpcHandler,
  const TNhtbsd_BytesInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg  ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getStbCaSn
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getStbCaSn (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_setMarketSegmentId
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_setMarketSegmentId (
  TMsgBuf_rpcHandler          xRpcHandler,
  const TNhtbsd_BytesInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg  ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getMarketSegmentId
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getMarketSegmentId (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getNuidCheckNumber
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getNuidCheckNumber (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_getDataIntegrityCheckNumber
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_getDataIntegrityCheckNumber (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtbsd_CheckNumberBytesInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_bsdPrint
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_bsdPrint (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtbsd_StringInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg   ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_encryptFlashProtKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_encryptFlashProtKey (
  TMsgBuf_rpcHandler                        xRpcHandler,
  const TNhtbsd_EncryptFlashProtKeyInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                    ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_allocateSysBuffer
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_allocateSysBuffer (
  TMsgBuf_rpcHandler         xRpcHandler,
  const TNhtbsd_SizeInMsg  * pxInputMessage,
  TNhtbsd_HandleOutMsg    ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_deallocateSysBuffer
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_deallocateSysBuffer (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtbsd_HandleInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg   ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_openR2REncryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_openR2REncryptSession (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_openR2RDecryptSession
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_openR2RDecryptSession (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_nht_closeR2RSessionHandle
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_nht_closeR2RSessionHandle (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtbsd_HandleInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg   ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_setClearTextKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_setClearTextKey (
  TMsgBuf_rpcHandler                 xRpcHandler,
  const TNhtbsd_ClearTextKeyInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_set2LevelProtectedKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_set2LevelProtectedKey (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtbsd_Level2ProtectedKeyInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg               ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_setFlashProtectingKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_setFlashProtectingKey (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtbsd_FlashProtectingKeyInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg               ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_useCertKey_inMsg
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_useCertKey_inMsg (
  TMsgBuf_rpcHandler            xRpcHandler,
  const TNhtbsd_CertKeyInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg    ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_r2rSessionEncrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_r2rSessionEncrypt (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtbsd_R2rCipherInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_r2rSessionDecrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_r2rSessionDecrypt (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtbsd_R2rCipherInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_doMonteCarloTest
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_doMonteCarloTest (
  TMsgBuf_rpcHandler                        xRpcHandler,
  const TNhtbsd_R2rMonteCarloParamsInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                    ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_r2rLegacyEncryptWithSecretKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_r2rLegacyEncryptWithSecretKey (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtbsd_R2rLegacyOperationInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                   ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_r2rLegacyDecryptWithSecretKey
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_r2rLegacyDecryptWithSecretKey (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtbsd_R2rLegacyOperationInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                   ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_rsaPublicEncrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_rsaPublicEncrypt (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtbsd_RsaPublicEncryptInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_rsaPublicDecrypt
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_rsaPublicDecrypt (
  TMsgBuf_rpcHandler                     xRpcHandler,
  const TNhtbsd_RsaPublicDecryptInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg                 ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_sha256Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_sha256Init (
  TMsgBuf_rpcHandler               xRpcHandler,
  const TNhtbsd_OptOutput1InMsg  * pxInputMessage,
  TNhtbsd_HandleOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_sha256Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_sha256Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtbsd_ShaUpdateInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_sha256Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_sha256Final (
  TMsgBuf_rpcHandler                 xRpcHandler,
  const TNhtbsd_ShaTerminateInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg             ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_hmacSha256Init
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_hmacSha256Init (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtbsd_HmacShaInitInMsg  * pxInputMessage,
  TNhtbsd_HandleOutMsg           ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_hmacSha256Update
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_hmacSha256Update (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtbsd_ShaUpdateInMsg  * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_hmacSha256Final
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_hmacSha256Final (
  TMsgBuf_rpcHandler                 xRpcHandler,
  const TNhtbsd_ShaTerminateInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg             ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_generateRandomBytes
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_generateRandomBytes (
  TMsgBuf_rpcHandler           xRpcHandler,
  const TNhtbsd_RandomInMsg  * pxInputMessage,
  TNhtbsd_BytesOutMsg       ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hn_chipReset
 *
 * This method stands as an asynchronous notification function.
 * Caller of this function immediately returns without waiting
 * the completion of its remote execution.
 *
 * PS: param 'pxOutputMessage' is always assumed to be NULL.
 */
TRpc_status rpc_nhtbsd_hn_chipReset (
  TMsgBuf_rpcHandler        xRpcHandler,
  const TNhtbsd_EmptyMsg  * pxInputMessage,
  TNhtbsd_EmptyMsg       ** pxOutputMessage );


/* RPC method: rpc_nhtbsd_hc_server_terminate
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtbsd_hc_server_terminate (
  TMsgBuf_rpcHandler         xRpcHandler,
  const TNhtbsd_EmptyMsg   * pxInputMessage,
  TNhtbsd_BsdStatusOutMsg ** pxOutputMessage );



#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _RPC_API_NHTBSD_H_ */

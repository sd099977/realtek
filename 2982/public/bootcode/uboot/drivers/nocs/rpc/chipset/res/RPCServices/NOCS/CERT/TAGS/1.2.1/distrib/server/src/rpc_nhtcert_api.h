/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtcert.proto
 */

#ifndef _RPC_API_NHTCERT_H_
#define _RPC_API_NHTCERT_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "src/msgbuf_nhtcert.h"


/* RPC method: rpc_nhtcert_hc_nht_getFunctionTable
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_getFunctionTable (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtcert_EmptyMsg         * pxInputMessage,
  TNhtcert_CertTableHandleOutMsg ** pxOutputMessage );


/* RPC method: rpc_nhtcert_hc_nht_getDriverVersion
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_getDriverVersion (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtcert_CertGetSingleInfoInMsg  * pxInputMessage,
  TNhtcert_CertGetVersionOutMsg         ** pxOutputMessage );


/* RPC method: rpc_nhtcert_hc_nht_getServiceName
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_getServiceName (
  TMsgBuf_rpcHandler                       xRpcHandler,
  const TNhtcert_CertGetSingleInfoInMsg  * pxInputMessage,
  TNhtcert_CertGetStringOutMsg          ** pxOutputMessage );


/* RPC method: rpc_nhtcert_hc_nht_lock
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_lock (
  TMsgBuf_rpcHandler              xRpcHandler,
  const TNhtcert_CertLockInMsg  * pxInputMessage,
  TNhtcert_HandleOutMsg        ** pxOutputMessage );


/* RPC method: rpc_nhtcert_hc_nht_unlock
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_unlock (
  TMsgBuf_rpcHandler                xRpcHandler,
  const TNhtcert_CertUnlockInMsg  * pxInputMessage,
  TNhtcert_CertStatusOutMsg      ** pxOutputMessage );


/* RPC method: rpc_nhtcert_hc_nht_exchange
 *
 * This method stands as a synchronous function call.
 * Caller of this function only returns after completion of
 * its remote execution.
 */
TRpc_status rpc_nhtcert_hc_nht_exchange (
  TMsgBuf_rpcHandler                  xRpcHandler,
  const TNhtcert_CertExchangeInMsg  * pxInputMessage,
  TNhtcert_CertExchangeOutMsg      ** pxOutputMessage );



#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _RPC_API_NHTCERT_H_ */

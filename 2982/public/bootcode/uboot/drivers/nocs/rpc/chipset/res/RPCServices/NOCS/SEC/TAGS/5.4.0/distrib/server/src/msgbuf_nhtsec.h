/* DO NOT EDIT THIS FILE!!!
 * This file was automatically generated by msgbuf compiler!
 *
 * This file contains the msgbuf structure definitions associated
 * to the package nhtsec.proto
 */

#ifndef _MSGBUF_NHTSEC_H_
#define _MSGBUF_NHTSEC_H_

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*****************************************************************************
 * include files                                                             *
 ****************************************************************************/

#include "inc/xsd-c.h"

/*****************************************************************************
 * msgbuf message type definition                                            *
 ****************************************************************************/

typedef struct SNhtsec_EmptyMsg                     TNhtsec_EmptyMsg;
typedef struct SNhtsec_SysInBytesMsg                TNhtsec_SysInBytesMsg;
typedef struct SNhtsec_SysOutBytesMsg               TNhtsec_SysOutBytesMsg;
typedef struct SNhtsec_SecTableOutMsg               TNhtsec_SecTableOutMsg;
typedef struct SNhtsec_OptOutput1InMsg              TNhtsec_OptOutput1InMsg;
typedef struct SNhtsec_ValueOutMsg                  TNhtsec_ValueOutMsg;
typedef struct SNhtsec_BytesOutMsg                  TNhtsec_BytesOutMsg;
typedef struct SNhtsec_StringOutMsg                 TNhtsec_StringOutMsg;
typedef struct SNhtsec_CryptoProcessInMsg           TNhtsec_CryptoProcessInMsg;
typedef struct SNhtsec_RsaGenKeyInMsg               TNhtsec_RsaGenKeyInMsg;
typedef struct SNhtsec_RsaGenKeyOutMsg              TNhtsec_RsaGenKeyOutMsg;
typedef struct SNhtsec_RsaPublicEncryptInMsg        TNhtsec_RsaPublicEncryptInMsg;
typedef struct SNhtsec_RsaPrivateEncryptInMsg       TNhtsec_RsaPrivateEncryptInMsg;
typedef struct SNhtsec_RsaPublicDecryptInMsg        TNhtsec_RsaPublicDecryptInMsg;
typedef struct SNhtsec_RsaPrivateDecryptInMsg       TNhtsec_RsaPrivateDecryptInMsg;
typedef struct SNhtsec_RsaDecryptOutMsg             TNhtsec_RsaDecryptOutMsg;
typedef struct SNhtsec_RsaComputeCrtParamsInMsg     TNhtsec_RsaComputeCrtParamsInMsg;
typedef struct SNhtsec_RsaComputeCrtParamsOutMsg    TNhtsec_RsaComputeCrtParamsOutMsg;
typedef struct SNhtsec_DhGenerateKeyInMsg           TNhtsec_DhGenerateKeyInMsg;
typedef struct SNhtsec_DhGenerateKeyOutMsg          TNhtsec_DhGenerateKeyOutMsg;
typedef struct SNhtsec_DhComputeKeyInMsg            TNhtsec_DhComputeKeyInMsg;
typedef struct SNhtsec_HandleOutMsg                 TNhtsec_HandleOutMsg;
typedef struct SNhtsec_ShaUpdateInMsg               TNhtsec_ShaUpdateInMsg;
typedef struct SNhtsec_StatusOutMsg                 TNhtsec_StatusOutMsg;
typedef struct SNhtsec_ShaFinalInMsg                TNhtsec_ShaFinalInMsg;
typedef struct SNhtsec_HmacShaInitInMsg             TNhtsec_HmacShaInitInMsg;
typedef struct SNhtsec_GenerateRandomBytesInMsg     TNhtsec_GenerateRandomBytesInMsg;
typedef struct SNhtsec_EcParamsMsg                  TNhtsec_EcParamsMsg;
typedef struct SNhtsec_EcdsaGenerateKeyInMsg        TNhtsec_EcdsaGenerateKeyInMsg;
typedef struct SNhtsec_EcdsaGenerateKeyOutMsg       TNhtsec_EcdsaGenerateKeyOutMsg;
typedef struct SNhtsec_EcdsaSignInMsg               TNhtsec_EcdsaSignInMsg;
typedef struct SNhtsec_EcdsaSignOutMsg              TNhtsec_EcdsaSignOutMsg;
typedef struct SNhtsec_EcdsaVerifyInMsg             TNhtsec_EcdsaVerifyInMsg;
typedef struct SNhtsec_EcdhGenerateInMsg            TNhtsec_EcdhGenerateInMsg;
typedef struct SNhtsec_EcdhGenerateOutMsg           TNhtsec_EcdhGenerateOutMsg;
typedef struct SNhtsec_EcdhComputeKeyInMsg          TNhtsec_EcdhComputeKeyInMsg;
typedef struct SNhtsec_HandleInMsg                  TNhtsec_HandleInMsg;
typedef struct SNhtsec_SetClearTextKeyInMsg         TNhtsec_SetClearTextKeyInMsg;
typedef struct SNhtsec_Set2LevelProtectedKeyInMsg   TNhtsec_Set2LevelProtectedKeyInMsg;
typedef struct SNhtsec_UseCertKeyInMsg              TNhtsec_UseCertKeyInMsg;
typedef struct SNhtsec_SessionCryptoProcessInMsg    TNhtsec_SessionCryptoProcessInMsg;
typedef struct SNhtsec_UseFlashProtKeyInMsg         TNhtsec_UseFlashProtKeyInMsg;
typedef struct SNhtsec_R2rMonteCarloParamsInMsg     TNhtsec_R2rMonteCarloParamsInMsg;
typedef struct SNhtsec_R2rMonteCarloRunInMsg        TNhtsec_R2rMonteCarloRunInMsg;
typedef struct SNhtsec_TransportIdOutMsg            TNhtsec_TransportIdOutMsg;
typedef struct SNhtsec_TransportIdInMsg             TNhtsec_TransportIdInMsg;
typedef struct SNhtsec_StreamSessionOpenInMsg       TNhtsec_StreamSessionOpenInMsg;
typedef struct SNhtsec_Set0LevelProtectedKeyInMsg   TNhtsec_Set0LevelProtectedKeyInMsg;
typedef struct SNhtsec_Set1LevelProtectedKeyInMsg   TNhtsec_Set1LevelProtectedKeyInMsg;
typedef struct SNhtsec_SetMetadataInMsg             TNhtsec_SetMetadataInMsg;
typedef struct SNhtsec_SizeInMsg                    TNhtsec_SizeInMsg;
typedef struct SNhtsec_EcmCallBackMsg               TNhtsec_EcmCallBackMsg;
typedef struct SNhtsec_DemuxServiceInfoMsg          TNhtsec_DemuxServiceInfoMsg;
typedef struct SNhtsec_DemuxEcmInfoMsg              TNhtsec_DemuxEcmInfoMsg;
typedef struct SNhtsec_OpenDscTransportSessionInMsg TNhtsec_OpenDscTransportSessionInMsg;
typedef struct SNhtsec_OpenScrTransportSessionInMsg TNhtsec_OpenScrTransportSessionInMsg;
typedef struct SNhtsec_WaitOnCompletionInMsg        TNhtsec_WaitOnCompletionInMsg;
typedef struct SNhtsec_SetIvInMsg                   TNhtsec_SetIvInMsg;


/*****************************************************************************
 * msgbuf enum type definition                                               *
 ****************************************************************************/


/*****************************************************************************
 * msgbuf message structure definition                                       *
 ****************************************************************************/

struct SNhtsec_EmptyMsg
{
  TMsgBuf_desc    _pDesc;
};

struct SNhtsec_SysInBytesMsg
{
  TMsgBuf_desc     _pDesc;
  TMsgBuf_bool     has_handle;
  int64_t          handle;
  TMsgBuf_bytes    sysBytes;
};

struct SNhtsec_SysOutBytesMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  TMsgBuf_bool    has_output;
};

struct SNhtsec_SecTableOutMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  uint32_t        apiVersion;
  TMsgBuf_bool    has_secGetNuid;
  TMsgBuf_bool    has_secGetChipsetRevision;
  TMsgBuf_bool    has_secEncryptData;
  TMsgBuf_bool    has_secDecryptData;
  TMsgBuf_bool    has_secGenerateRandomBytes;
  TMsgBuf_bool    has_secRsaGenerateKey;
  TMsgBuf_bool    has_secRsaPublicEncrypt;
  TMsgBuf_bool    has_secRsaPrivateEncrypt;
  TMsgBuf_bool    has_secRsaPublicDecrypt;
  TMsgBuf_bool    has_secRsaPrivateDecrypt;
  TMsgBuf_bool    has_secDhGenerateKey;
  TMsgBuf_bool    has_secDhComputeKey;
  TMsgBuf_bool    has_secSha1Init;
  TMsgBuf_bool    has_secSha1Update;
  TMsgBuf_bool    has_secSha1Final;
  TMsgBuf_bool    has_secSha256Init;
  TMsgBuf_bool    has_secSha256Update;
  TMsgBuf_bool    has_secSha256Final;
  TMsgBuf_bool    has_secHmacSha256Init;
  TMsgBuf_bool    has_secHmacSha256Update;
  TMsgBuf_bool    has_secHmacSha256Final;
  TMsgBuf_bool    has_secEcdsaGenerateKey;
  TMsgBuf_bool    has_secEcdsaSign;
  TMsgBuf_bool    has_secEcdsaVerify;
  TMsgBuf_bool    has_secEcdhGenerateKey;
  TMsgBuf_bool    has_secEcdhComputeKey;
  TMsgBuf_bool    has_secOpenRam2RamEncryptSession;
  TMsgBuf_bool    has_secOpenRam2RamDecryptSession;
  TMsgBuf_bool    has_secCloseSession;
  TMsgBuf_bool    has_secSetClearTextKey;
  TMsgBuf_bool    has_secSet2LevelProtectedKey;
  TMsgBuf_bool    has_secUseCertKey;
  TMsgBuf_bool    has_secSessionEncrypt;
  TMsgBuf_bool    has_secSessionDecrypt;
  TMsgBuf_bool    has_secGetNuid64;
  TMsgBuf_bool    has_secGetChipsetExtension;
  TMsgBuf_bool    has_secSha384Init;
  TMsgBuf_bool    has_secSha384Update;
  TMsgBuf_bool    has_secSha384Final;
  TMsgBuf_bool    has_secRsaComputeCrtParams;
  TMsgBuf_bool    has_secEncryptFlashProtKey;
  TMsgBuf_bool    has_secUseFlashProtKey;
  TMsgBuf_bool    has_secOpenStreamEncryptSession;
  TMsgBuf_bool    has_secOpenStreamDecryptSession;
  TMsgBuf_bool    has_secSet0LevelProtectedKey;
  TMsgBuf_bool    has_secSet1LevelProtectedKey;
  TMsgBuf_bool    has_secSetMetadata;
  TMsgBuf_bool    has_secAllocateBuffer;
  TMsgBuf_bool    has_secFreeBuffer;
  TMsgBuf_bool    has_secUseLegacyKey;
};

struct SNhtsec_OptOutput1InMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_output;
};

struct SNhtsec_ValueOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_value;
  uint32_t        value;
};

struct SNhtsec_BytesOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    byteArray;
};

struct SNhtsec_StringOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  char         *  info;
};

struct SNhtsec_CryptoProcessInMsg
{
  TMsgBuf_desc              _pDesc;
  uint32_t                  dataInSize;
  TNhtsec_SysInBytesMsg  *  dataIn;
  TNhtsec_SysOutBytesMsg *  dataOut;
};

struct SNhtsec_RsaGenKeyInMsg
{
  TMsgBuf_desc              _pDesc;
  uint32_t                  keySize;
  uint32_t                  e;
  TNhtsec_SysOutBytesMsg *  n;
  TNhtsec_SysOutBytesMsg *  p;
  TNhtsec_SysOutBytesMsg *  q;
  TNhtsec_SysOutBytesMsg *  dp;
  TNhtsec_SysOutBytesMsg *  dq;
  TNhtsec_SysOutBytesMsg *  qinv;
};

struct SNhtsec_RsaGenKeyOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    n;
  TMsgBuf_bytes    p;
  TMsgBuf_bytes    q;
  TMsgBuf_bytes    dp;
  TMsgBuf_bytes    dq;
  TMsgBuf_bytes    qinv;
};

struct SNhtsec_RsaPublicEncryptInMsg
{
  TMsgBuf_desc              _pDesc;
  uint32_t                  dataInSize;
  TNhtsec_SysInBytesMsg  *  dataIn;
  TNhtsec_SysOutBytesMsg *  dataOut;
  uint32_t                  e;
  TNhtsec_SysInBytesMsg  *  n;
  uint32_t                  keySize;
  uint32_t                  padding;
};

struct SNhtsec_RsaPrivateEncryptInMsg
{
  TMsgBuf_desc              _pDesc;
  uint32_t                  dataInSize;
  TNhtsec_SysInBytesMsg  *  dataIn;
  TNhtsec_SysOutBytesMsg *  dataOut;
  uint32_t                  e;
  TNhtsec_SysInBytesMsg  *  n;
  TNhtsec_SysInBytesMsg  *  p;
  TNhtsec_SysInBytesMsg  *  q;
  TNhtsec_SysInBytesMsg  *  dp;
  TNhtsec_SysInBytesMsg  *  dq;
  TNhtsec_SysInBytesMsg  *  qinv;
  uint32_t                  keySize;
  uint32_t                  padding;
};

struct SNhtsec_RsaPublicDecryptInMsg
{
  TMsgBuf_desc              _pDesc;
  TNhtsec_SysInBytesMsg  *  dataIn;
  TNhtsec_SysOutBytesMsg *  dataOut;
  TMsgBuf_bool              has_outputSize;
  uint32_t                  e;
  TNhtsec_SysInBytesMsg  *  n;
  uint32_t                  keySize;
  uint32_t                  padding;
};

struct SNhtsec_RsaPrivateDecryptInMsg
{
  TMsgBuf_desc              _pDesc;
  TNhtsec_SysInBytesMsg  *  dataIn;
  TNhtsec_SysOutBytesMsg *  dataOut;
  TMsgBuf_bool              has_outputSize;
  uint32_t                  e;
  TNhtsec_SysInBytesMsg  *  n;
  TNhtsec_SysInBytesMsg  *  p;
  TNhtsec_SysInBytesMsg  *  q;
  TNhtsec_SysInBytesMsg  *  dp;
  TNhtsec_SysInBytesMsg  *  dq;
  TNhtsec_SysInBytesMsg  *  qinv;
  uint32_t                  keySize;
  uint32_t                  padding;
};

struct SNhtsec_RsaDecryptOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    byteArray;
  TMsgBuf_bool     has_outputSize;
  uint32_t         outputSize;
};

struct SNhtsec_RsaComputeCrtParamsInMsg
{
  TMsgBuf_desc              _pDesc;
  uint32_t                  keySize;
  uint32_t                  e;
  TNhtsec_SysInBytesMsg  *  p;
  TNhtsec_SysInBytesMsg  *  q;
  TNhtsec_SysOutBytesMsg *  dp;
  TNhtsec_SysOutBytesMsg *  dq;
  TNhtsec_SysOutBytesMsg *  qinv;
};

struct SNhtsec_RsaComputeCrtParamsOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    dp;
  TMsgBuf_bytes    dq;
  TMsgBuf_bytes    qinv;
};

struct SNhtsec_DhGenerateKeyInMsg
{
  TMsgBuf_desc              _pDesc;
  TNhtsec_SysInBytesMsg  *  g;
  TNhtsec_SysInBytesMsg  *  p;
  TNhtsec_SysInBytesMsg  *  inputPrivateKey;
  TNhtsec_SysOutBytesMsg *  outputPrivateKey;
  TNhtsec_SysOutBytesMsg *  outputPubKey;
  uint32_t                  keySize;
};

struct SNhtsec_DhGenerateKeyOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    privateKey;
  TMsgBuf_bytes    pubKey;
};

struct SNhtsec_DhComputeKeyInMsg
{
  TMsgBuf_desc              _pDesc;
  TNhtsec_SysInBytesMsg  *  p;
  TNhtsec_SysInBytesMsg  *  privateKey;
  TNhtsec_SysInBytesMsg  *  otherPubKey;
  TNhtsec_SysOutBytesMsg *  output;
  uint32_t                  keySize;
};

struct SNhtsec_HandleOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtsec_ShaUpdateInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 chunkSize;
  TNhtsec_SysInBytesMsg *  chunk;
};

struct SNhtsec_StatusOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
};

struct SNhtsec_ShaFinalInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_handle;
  int64_t                   handle;
  TNhtsec_SysOutBytesMsg *  digest;
};

struct SNhtsec_HmacShaInitInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_output;
  uint32_t                 keySize;
  TNhtsec_SysInBytesMsg *  key;
};

struct SNhtsec_GenerateRandomBytesInMsg
{
  TMsgBuf_desc              _pDesc;
  uint64_t                  n;
  TNhtsec_SysOutBytesMsg *  dataOut;
};

struct SNhtsec_EcParamsMsg
{
  TMsgBuf_desc             _pDesc;
  TNhtsec_SysInBytesMsg *  q;
  TNhtsec_SysInBytesMsg *  a;
  TNhtsec_SysInBytesMsg *  b;
  TNhtsec_SysInBytesMsg *  gx;
  TNhtsec_SysInBytesMsg *  gy;
  TNhtsec_SysInBytesMsg *  n;
  TNhtsec_SysInBytesMsg *  h;
  uint32_t                 keySize;
};

struct SNhtsec_EcdsaGenerateKeyInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_paramHandle;
  int64_t                   paramHandle;
  TNhtsec_EcParamsMsg    *  param;
  TNhtsec_SysInBytesMsg  *  inputPrivKey;
  TNhtsec_SysOutBytesMsg *  outputPrivKey;
  TNhtsec_SysOutBytesMsg *  pubKeyX;
  TNhtsec_SysOutBytesMsg *  pubKeyY;
};

struct SNhtsec_EcdsaGenerateKeyOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    privKey;
  TMsgBuf_bytes    pubKeyX;
  TMsgBuf_bytes    pubKeyY;
};

struct SNhtsec_EcdsaSignInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_paramHandle;
  int64_t                   paramHandle;
  TNhtsec_EcParamsMsg    *  param;
  int32_t                   hashType;
  TNhtsec_SysInBytesMsg  *  inputPrivKey;
  uint32_t                  messageSize;
  TNhtsec_SysInBytesMsg  *  message;
  TNhtsec_SysOutBytesMsg *  sigR;
  TNhtsec_SysOutBytesMsg *  sigS;
};

struct SNhtsec_EcdsaSignOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    sigR;
  TMsgBuf_bytes    sigS;
};

struct SNhtsec_EcdsaVerifyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_paramHandle;
  int64_t                  paramHandle;
  TNhtsec_EcParamsMsg   *  param;
  int32_t                  hashType;
  TNhtsec_SysInBytesMsg *  pubKeyX;
  TNhtsec_SysInBytesMsg *  pubKeyY;
  uint32_t                 messageSize;
  TNhtsec_SysInBytesMsg *  message;
  TNhtsec_SysInBytesMsg *  sigR;
  TNhtsec_SysInBytesMsg *  sigS;
};

struct SNhtsec_EcdhGenerateInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_paramHandle;
  int64_t                   paramHandle;
  TNhtsec_EcParamsMsg    *  param;
  TNhtsec_SysInBytesMsg  *  inputPrivKey;
  TNhtsec_SysOutBytesMsg *  outputPrivKey;
  TNhtsec_SysOutBytesMsg *  pubKeyX;
  TNhtsec_SysOutBytesMsg *  pubKeyY;
};

struct SNhtsec_EcdhGenerateOutMsg
{
  TMsgBuf_desc     _pDesc;
  int32_t          retStatus;
  TMsgBuf_bytes    outputPrivKey;
  TMsgBuf_bytes    pubKeyX;
  TMsgBuf_bytes    pubKeyY;
};

struct SNhtsec_EcdhComputeKeyInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_paramHandle;
  int64_t                   paramHandle;
  TNhtsec_EcParamsMsg    *  param;
  TNhtsec_SysInBytesMsg  *  inputPrivKey;
  TNhtsec_SysInBytesMsg  *  otherPubKeyX;
  TNhtsec_SysInBytesMsg  *  otherPubKeyY;
  TNhtsec_SysOutBytesMsg *  sharedSecretKey;
};

struct SNhtsec_HandleInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
};

struct SNhtsec_SetClearTextKeyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  uint32_t                 clearTextKeySize;
  TNhtsec_SysInBytesMsg *  clearTextKey;
};

struct SNhtsec_Set2LevelProtectedKeyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  uint32_t                 cipheredContentKeySize;
  TNhtsec_SysInBytesMsg *  cipheredContentKey;
  uint32_t                 cipheredProtectingKeySize;
  TNhtsec_SysInBytesMsg *  l1CipheredProtectingKey;
  TNhtsec_SysInBytesMsg *  l2CipheredProtectingKey;
};

struct SNhtsec_UseCertKeyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
};

struct SNhtsec_SessionCryptoProcessInMsg
{
  TMsgBuf_desc              _pDesc;
  TMsgBuf_bool              has_handle;
  int64_t                   handle;
  uint32_t                  dataInSize;
  TNhtsec_SysInBytesMsg  *  dataIn;
  uint32_t                  ivSize;
  TNhtsec_SysInBytesMsg  *  iv;
  TNhtsec_SysOutBytesMsg *  dataOut;
};

struct SNhtsec_UseFlashProtKeyInMsg
{
  TMsgBuf_desc    _pDesc;
  TMsgBuf_bool    has_handle;
  int64_t         handle;
  uint32_t        emi;
};

struct SNhtsec_R2rMonteCarloParamsInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_sessionHandle;
  int64_t                  sessionHandle;
  TMsgBuf_bool             hasIvEmulation;
  TMsgBuf_bool             isLegacy;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  TMsgBuf_bool             isForEncryption;
  TMsgBuf_bool             isMonteCarlo;
  uint32_t                 runNumber;
  uint32_t                 ivSize;
  TNhtsec_SysInBytesMsg *  iv;
  uint32_t                 dataInSize;
  TNhtsec_SysInBytesMsg *  dataIn;
};

struct SNhtsec_R2rMonteCarloRunInMsg
{
  TMsgBuf_desc                        _pDesc;
  TNhtsec_R2rMonteCarloParamsInMsg *  params;
  TNhtsec_SysOutBytesMsg           *  dataOut;
};

struct SNhtsec_TransportIdOutMsg
{
  TMsgBuf_desc    _pDesc;
  int32_t         retStatus;
  TMsgBuf_bool    has_handle;
  uint32_t        handle;
};

struct SNhtsec_TransportIdInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        handle;
};

struct SNhtsec_StreamSessionOpenInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        transportSessionId;
  TMsgBuf_bool    has_output;
};

struct SNhtsec_Set0LevelProtectedKeyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  uint32_t                 cipheredContentKeySize;
  TNhtsec_SysInBytesMsg *  cipheredContentKey;
};

struct SNhtsec_Set1LevelProtectedKeyInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 emi;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  uint32_t                 cipheredContentKeySize;
  TNhtsec_SysInBytesMsg *  cipheredContentKey;
  uint32_t                 cipheredProtectingKeySize;
  TNhtsec_SysInBytesMsg *  l1CipheredProtectingKey;
};

struct SNhtsec_SetMetadataInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 metadataSize;
  TNhtsec_SysInBytesMsg *  metadata;
};

struct SNhtsec_SizeInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        value;
};

struct SNhtsec_EcmCallBackMsg
{
  TMsgBuf_desc     _pDesc;
  uint32_t         tableId;
  TMsgBuf_bool     has_ecmCallBackHandle;
  int64_t          ecmCallBackHandle;
  uint32_t         transportSessionId;
  TMsgBuf_bytes    ecm;
  uint32_t         ecmSize;
};

struct SNhtsec_DemuxServiceInfoMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        audioPid;
  uint32_t        videoPid;
  uint32_t        pcrPid;
};

struct SNhtsec_DemuxEcmInfoMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        ecmPid;
  TMsgBuf_bool    has_ecmCallBackHandle;
  int64_t         ecmCallBackHandle;
};

struct SNhtsec_OpenDscTransportSessionInMsg
{
  TMsgBuf_desc                   _pDesc;
  char                        *  inputFilePathname;
  TNhtsec_DemuxServiceInfoMsg *  demuxServiceInfo;
  TMsgBuf_bool                   isInClear;
  TNhtsec_DemuxEcmInfoMsg     *  demuxEcmInfo;
  char                        *  outputFilePathname;
  TMsgBuf_bool                   has_output;
};

struct SNhtsec_OpenScrTransportSessionInMsg
{
  TMsgBuf_desc                   _pDesc;
  char                        *  inputFilePathname;
  TNhtsec_DemuxServiceInfoMsg *  demuxServiceInfo;
  TMsgBuf_bool                   isForEncryption;
  char                        *  outputFilePathname;
  TMsgBuf_bool                   has_output;
};

struct SNhtsec_WaitOnCompletionInMsg
{
  TMsgBuf_desc    _pDesc;
  uint32_t        handle;
  int32_t         timeout;
};

struct SNhtsec_SetIvInMsg
{
  TMsgBuf_desc             _pDesc;
  TMsgBuf_bool             has_handle;
  int64_t                  handle;
  uint32_t                 keyIdSize;
  TNhtsec_SysInBytesMsg *  keyId;
  uint32_t                 ivSize;
  TNhtsec_SysInBytesMsg *  iv;
};


/*****************************************************************************
 * msgbuf Message initialization  function                                   *
 ****************************************************************************/

void init_Nhtsec_EmptyMsg                     ( TNhtsec_EmptyMsg                     * pInstance );
void init_Nhtsec_SysInBytesMsg                ( TNhtsec_SysInBytesMsg                * pInstance );
void init_Nhtsec_SysOutBytesMsg               ( TNhtsec_SysOutBytesMsg               * pInstance );
void init_Nhtsec_SecTableOutMsg               ( TNhtsec_SecTableOutMsg               * pInstance );
void init_Nhtsec_OptOutput1InMsg              ( TNhtsec_OptOutput1InMsg              * pInstance );
void init_Nhtsec_ValueOutMsg                  ( TNhtsec_ValueOutMsg                  * pInstance );
void init_Nhtsec_BytesOutMsg                  ( TNhtsec_BytesOutMsg                  * pInstance );
void init_Nhtsec_StringOutMsg                 ( TNhtsec_StringOutMsg                 * pInstance );
void init_Nhtsec_CryptoProcessInMsg           ( TNhtsec_CryptoProcessInMsg           * pInstance );
void init_Nhtsec_RsaGenKeyInMsg               ( TNhtsec_RsaGenKeyInMsg               * pInstance );
void init_Nhtsec_RsaGenKeyOutMsg              ( TNhtsec_RsaGenKeyOutMsg              * pInstance );
void init_Nhtsec_RsaPublicEncryptInMsg        ( TNhtsec_RsaPublicEncryptInMsg        * pInstance );
void init_Nhtsec_RsaPrivateEncryptInMsg       ( TNhtsec_RsaPrivateEncryptInMsg       * pInstance );
void init_Nhtsec_RsaPublicDecryptInMsg        ( TNhtsec_RsaPublicDecryptInMsg        * pInstance );
void init_Nhtsec_RsaPrivateDecryptInMsg       ( TNhtsec_RsaPrivateDecryptInMsg       * pInstance );
void init_Nhtsec_RsaDecryptOutMsg             ( TNhtsec_RsaDecryptOutMsg             * pInstance );
void init_Nhtsec_RsaComputeCrtParamsInMsg     ( TNhtsec_RsaComputeCrtParamsInMsg     * pInstance );
void init_Nhtsec_RsaComputeCrtParamsOutMsg    ( TNhtsec_RsaComputeCrtParamsOutMsg    * pInstance );
void init_Nhtsec_DhGenerateKeyInMsg           ( TNhtsec_DhGenerateKeyInMsg           * pInstance );
void init_Nhtsec_DhGenerateKeyOutMsg          ( TNhtsec_DhGenerateKeyOutMsg          * pInstance );
void init_Nhtsec_DhComputeKeyInMsg            ( TNhtsec_DhComputeKeyInMsg            * pInstance );
void init_Nhtsec_HandleOutMsg                 ( TNhtsec_HandleOutMsg                 * pInstance );
void init_Nhtsec_ShaUpdateInMsg               ( TNhtsec_ShaUpdateInMsg               * pInstance );
void init_Nhtsec_StatusOutMsg                 ( TNhtsec_StatusOutMsg                 * pInstance );
void init_Nhtsec_ShaFinalInMsg                ( TNhtsec_ShaFinalInMsg                * pInstance );
void init_Nhtsec_HmacShaInitInMsg             ( TNhtsec_HmacShaInitInMsg             * pInstance );
void init_Nhtsec_GenerateRandomBytesInMsg     ( TNhtsec_GenerateRandomBytesInMsg     * pInstance );
void init_Nhtsec_EcParamsMsg                  ( TNhtsec_EcParamsMsg                  * pInstance );
void init_Nhtsec_EcdsaGenerateKeyInMsg        ( TNhtsec_EcdsaGenerateKeyInMsg        * pInstance );
void init_Nhtsec_EcdsaGenerateKeyOutMsg       ( TNhtsec_EcdsaGenerateKeyOutMsg       * pInstance );
void init_Nhtsec_EcdsaSignInMsg               ( TNhtsec_EcdsaSignInMsg               * pInstance );
void init_Nhtsec_EcdsaSignOutMsg              ( TNhtsec_EcdsaSignOutMsg              * pInstance );
void init_Nhtsec_EcdsaVerifyInMsg             ( TNhtsec_EcdsaVerifyInMsg             * pInstance );
void init_Nhtsec_EcdhGenerateInMsg            ( TNhtsec_EcdhGenerateInMsg            * pInstance );
void init_Nhtsec_EcdhGenerateOutMsg           ( TNhtsec_EcdhGenerateOutMsg           * pInstance );
void init_Nhtsec_EcdhComputeKeyInMsg          ( TNhtsec_EcdhComputeKeyInMsg          * pInstance );
void init_Nhtsec_HandleInMsg                  ( TNhtsec_HandleInMsg                  * pInstance );
void init_Nhtsec_SetClearTextKeyInMsg         ( TNhtsec_SetClearTextKeyInMsg         * pInstance );
void init_Nhtsec_Set2LevelProtectedKeyInMsg   ( TNhtsec_Set2LevelProtectedKeyInMsg   * pInstance );
void init_Nhtsec_UseCertKeyInMsg              ( TNhtsec_UseCertKeyInMsg              * pInstance );
void init_Nhtsec_SessionCryptoProcessInMsg    ( TNhtsec_SessionCryptoProcessInMsg    * pInstance );
void init_Nhtsec_UseFlashProtKeyInMsg         ( TNhtsec_UseFlashProtKeyInMsg         * pInstance );
void init_Nhtsec_R2rMonteCarloParamsInMsg     ( TNhtsec_R2rMonteCarloParamsInMsg     * pInstance );
void init_Nhtsec_R2rMonteCarloRunInMsg        ( TNhtsec_R2rMonteCarloRunInMsg        * pInstance );
void init_Nhtsec_TransportIdOutMsg            ( TNhtsec_TransportIdOutMsg            * pInstance );
void init_Nhtsec_TransportIdInMsg             ( TNhtsec_TransportIdInMsg             * pInstance );
void init_Nhtsec_StreamSessionOpenInMsg       ( TNhtsec_StreamSessionOpenInMsg       * pInstance );
void init_Nhtsec_Set0LevelProtectedKeyInMsg   ( TNhtsec_Set0LevelProtectedKeyInMsg   * pInstance );
void init_Nhtsec_Set1LevelProtectedKeyInMsg   ( TNhtsec_Set1LevelProtectedKeyInMsg   * pInstance );
void init_Nhtsec_SetMetadataInMsg             ( TNhtsec_SetMetadataInMsg             * pInstance );
void init_Nhtsec_SizeInMsg                    ( TNhtsec_SizeInMsg                    * pInstance );
void init_Nhtsec_EcmCallBackMsg               ( TNhtsec_EcmCallBackMsg               * pInstance );
void init_Nhtsec_DemuxServiceInfoMsg          ( TNhtsec_DemuxServiceInfoMsg          * pInstance );
void init_Nhtsec_DemuxEcmInfoMsg              ( TNhtsec_DemuxEcmInfoMsg              * pInstance );
void init_Nhtsec_OpenDscTransportSessionInMsg ( TNhtsec_OpenDscTransportSessionInMsg * pInstance );
void init_Nhtsec_OpenScrTransportSessionInMsg ( TNhtsec_OpenScrTransportSessionInMsg * pInstance );
void init_Nhtsec_WaitOnCompletionInMsg        ( TNhtsec_WaitOnCompletionInMsg        * pInstance );
void init_Nhtsec_SetIvInMsg                   ( TNhtsec_SetIvInMsg                   * pInstance );

/*****************************************************************************
 * msgbuf Message allocation function prototypes                             *
 ****************************************************************************/

TNhtsec_EmptyMsg                     * pAlloc_Nhtsec_EmptyMsg                     (void);
TNhtsec_SysInBytesMsg                * pAlloc_Nhtsec_SysInBytesMsg                (void);
TNhtsec_SysOutBytesMsg               * pAlloc_Nhtsec_SysOutBytesMsg               (void);
TNhtsec_SecTableOutMsg               * pAlloc_Nhtsec_SecTableOutMsg               (void);
TNhtsec_OptOutput1InMsg              * pAlloc_Nhtsec_OptOutput1InMsg              (void);
TNhtsec_ValueOutMsg                  * pAlloc_Nhtsec_ValueOutMsg                  (void);
TNhtsec_BytesOutMsg                  * pAlloc_Nhtsec_BytesOutMsg                  (void);
TNhtsec_StringOutMsg                 * pAlloc_Nhtsec_StringOutMsg                 (void);
TNhtsec_CryptoProcessInMsg           * pAlloc_Nhtsec_CryptoProcessInMsg           (void);
TNhtsec_RsaGenKeyInMsg               * pAlloc_Nhtsec_RsaGenKeyInMsg               (void);
TNhtsec_RsaGenKeyOutMsg              * pAlloc_Nhtsec_RsaGenKeyOutMsg              (void);
TNhtsec_RsaPublicEncryptInMsg        * pAlloc_Nhtsec_RsaPublicEncryptInMsg        (void);
TNhtsec_RsaPrivateEncryptInMsg       * pAlloc_Nhtsec_RsaPrivateEncryptInMsg       (void);
TNhtsec_RsaPublicDecryptInMsg        * pAlloc_Nhtsec_RsaPublicDecryptInMsg        (void);
TNhtsec_RsaPrivateDecryptInMsg       * pAlloc_Nhtsec_RsaPrivateDecryptInMsg       (void);
TNhtsec_RsaDecryptOutMsg             * pAlloc_Nhtsec_RsaDecryptOutMsg             (void);
TNhtsec_RsaComputeCrtParamsInMsg     * pAlloc_Nhtsec_RsaComputeCrtParamsInMsg     (void);
TNhtsec_RsaComputeCrtParamsOutMsg    * pAlloc_Nhtsec_RsaComputeCrtParamsOutMsg    (void);
TNhtsec_DhGenerateKeyInMsg           * pAlloc_Nhtsec_DhGenerateKeyInMsg           (void);
TNhtsec_DhGenerateKeyOutMsg          * pAlloc_Nhtsec_DhGenerateKeyOutMsg          (void);
TNhtsec_DhComputeKeyInMsg            * pAlloc_Nhtsec_DhComputeKeyInMsg            (void);
TNhtsec_HandleOutMsg                 * pAlloc_Nhtsec_HandleOutMsg                 (void);
TNhtsec_ShaUpdateInMsg               * pAlloc_Nhtsec_ShaUpdateInMsg               (void);
TNhtsec_StatusOutMsg                 * pAlloc_Nhtsec_StatusOutMsg                 (void);
TNhtsec_ShaFinalInMsg                * pAlloc_Nhtsec_ShaFinalInMsg                (void);
TNhtsec_HmacShaInitInMsg             * pAlloc_Nhtsec_HmacShaInitInMsg             (void);
TNhtsec_GenerateRandomBytesInMsg     * pAlloc_Nhtsec_GenerateRandomBytesInMsg     (void);
TNhtsec_EcParamsMsg                  * pAlloc_Nhtsec_EcParamsMsg                  (void);
TNhtsec_EcdsaGenerateKeyInMsg        * pAlloc_Nhtsec_EcdsaGenerateKeyInMsg        (void);
TNhtsec_EcdsaGenerateKeyOutMsg       * pAlloc_Nhtsec_EcdsaGenerateKeyOutMsg       (void);
TNhtsec_EcdsaSignInMsg               * pAlloc_Nhtsec_EcdsaSignInMsg               (void);
TNhtsec_EcdsaSignOutMsg              * pAlloc_Nhtsec_EcdsaSignOutMsg              (void);
TNhtsec_EcdsaVerifyInMsg             * pAlloc_Nhtsec_EcdsaVerifyInMsg             (void);
TNhtsec_EcdhGenerateInMsg            * pAlloc_Nhtsec_EcdhGenerateInMsg            (void);
TNhtsec_EcdhGenerateOutMsg           * pAlloc_Nhtsec_EcdhGenerateOutMsg           (void);
TNhtsec_EcdhComputeKeyInMsg          * pAlloc_Nhtsec_EcdhComputeKeyInMsg          (void);
TNhtsec_HandleInMsg                  * pAlloc_Nhtsec_HandleInMsg                  (void);
TNhtsec_SetClearTextKeyInMsg         * pAlloc_Nhtsec_SetClearTextKeyInMsg         (void);
TNhtsec_Set2LevelProtectedKeyInMsg   * pAlloc_Nhtsec_Set2LevelProtectedKeyInMsg   (void);
TNhtsec_UseCertKeyInMsg              * pAlloc_Nhtsec_UseCertKeyInMsg              (void);
TNhtsec_SessionCryptoProcessInMsg    * pAlloc_Nhtsec_SessionCryptoProcessInMsg    (void);
TNhtsec_UseFlashProtKeyInMsg         * pAlloc_Nhtsec_UseFlashProtKeyInMsg         (void);
TNhtsec_R2rMonteCarloParamsInMsg     * pAlloc_Nhtsec_R2rMonteCarloParamsInMsg     (void);
TNhtsec_R2rMonteCarloRunInMsg        * pAlloc_Nhtsec_R2rMonteCarloRunInMsg        (void);
TNhtsec_TransportIdOutMsg            * pAlloc_Nhtsec_TransportIdOutMsg            (void);
TNhtsec_TransportIdInMsg             * pAlloc_Nhtsec_TransportIdInMsg             (void);
TNhtsec_StreamSessionOpenInMsg       * pAlloc_Nhtsec_StreamSessionOpenInMsg       (void);
TNhtsec_Set0LevelProtectedKeyInMsg   * pAlloc_Nhtsec_Set0LevelProtectedKeyInMsg   (void);
TNhtsec_Set1LevelProtectedKeyInMsg   * pAlloc_Nhtsec_Set1LevelProtectedKeyInMsg   (void);
TNhtsec_SetMetadataInMsg             * pAlloc_Nhtsec_SetMetadataInMsg             (void);
TNhtsec_SizeInMsg                    * pAlloc_Nhtsec_SizeInMsg                    (void);
TNhtsec_EcmCallBackMsg               * pAlloc_Nhtsec_EcmCallBackMsg               (void);
TNhtsec_DemuxServiceInfoMsg          * pAlloc_Nhtsec_DemuxServiceInfoMsg          (void);
TNhtsec_DemuxEcmInfoMsg              * pAlloc_Nhtsec_DemuxEcmInfoMsg              (void);
TNhtsec_OpenDscTransportSessionInMsg * pAlloc_Nhtsec_OpenDscTransportSessionInMsg (void);
TNhtsec_OpenScrTransportSessionInMsg * pAlloc_Nhtsec_OpenScrTransportSessionInMsg (void);
TNhtsec_WaitOnCompletionInMsg        * pAlloc_Nhtsec_WaitOnCompletionInMsg        (void);
TNhtsec_SetIvInMsg                   * pAlloc_Nhtsec_SetIvInMsg                   (void);

/*****************************************************************************
 * msgbuf Message deallocation function prototypes                           *
 ****************************************************************************/

void dealloc_Nhtsec_EmptyMsg                     (TNhtsec_EmptyMsg                     * pxInstance);
void dealloc_Nhtsec_SysInBytesMsg                (TNhtsec_SysInBytesMsg                * pxInstance);
void dealloc_Nhtsec_SysOutBytesMsg               (TNhtsec_SysOutBytesMsg               * pxInstance);
void dealloc_Nhtsec_SecTableOutMsg               (TNhtsec_SecTableOutMsg               * pxInstance);
void dealloc_Nhtsec_OptOutput1InMsg              (TNhtsec_OptOutput1InMsg              * pxInstance);
void dealloc_Nhtsec_ValueOutMsg                  (TNhtsec_ValueOutMsg                  * pxInstance);
void dealloc_Nhtsec_BytesOutMsg                  (TNhtsec_BytesOutMsg                  * pxInstance);
void dealloc_Nhtsec_StringOutMsg                 (TNhtsec_StringOutMsg                 * pxInstance);
void dealloc_Nhtsec_CryptoProcessInMsg           (TNhtsec_CryptoProcessInMsg           * pxInstance);
void dealloc_Nhtsec_RsaGenKeyInMsg               (TNhtsec_RsaGenKeyInMsg               * pxInstance);
void dealloc_Nhtsec_RsaGenKeyOutMsg              (TNhtsec_RsaGenKeyOutMsg              * pxInstance);
void dealloc_Nhtsec_RsaPublicEncryptInMsg        (TNhtsec_RsaPublicEncryptInMsg        * pxInstance);
void dealloc_Nhtsec_RsaPrivateEncryptInMsg       (TNhtsec_RsaPrivateEncryptInMsg       * pxInstance);
void dealloc_Nhtsec_RsaPublicDecryptInMsg        (TNhtsec_RsaPublicDecryptInMsg        * pxInstance);
void dealloc_Nhtsec_RsaPrivateDecryptInMsg       (TNhtsec_RsaPrivateDecryptInMsg       * pxInstance);
void dealloc_Nhtsec_RsaDecryptOutMsg             (TNhtsec_RsaDecryptOutMsg             * pxInstance);
void dealloc_Nhtsec_RsaComputeCrtParamsInMsg     (TNhtsec_RsaComputeCrtParamsInMsg     * pxInstance);
void dealloc_Nhtsec_RsaComputeCrtParamsOutMsg    (TNhtsec_RsaComputeCrtParamsOutMsg    * pxInstance);
void dealloc_Nhtsec_DhGenerateKeyInMsg           (TNhtsec_DhGenerateKeyInMsg           * pxInstance);
void dealloc_Nhtsec_DhGenerateKeyOutMsg          (TNhtsec_DhGenerateKeyOutMsg          * pxInstance);
void dealloc_Nhtsec_DhComputeKeyInMsg            (TNhtsec_DhComputeKeyInMsg            * pxInstance);
void dealloc_Nhtsec_HandleOutMsg                 (TNhtsec_HandleOutMsg                 * pxInstance);
void dealloc_Nhtsec_ShaUpdateInMsg               (TNhtsec_ShaUpdateInMsg               * pxInstance);
void dealloc_Nhtsec_StatusOutMsg                 (TNhtsec_StatusOutMsg                 * pxInstance);
void dealloc_Nhtsec_ShaFinalInMsg                (TNhtsec_ShaFinalInMsg                * pxInstance);
void dealloc_Nhtsec_HmacShaInitInMsg             (TNhtsec_HmacShaInitInMsg             * pxInstance);
void dealloc_Nhtsec_GenerateRandomBytesInMsg     (TNhtsec_GenerateRandomBytesInMsg     * pxInstance);
void dealloc_Nhtsec_EcParamsMsg                  (TNhtsec_EcParamsMsg                  * pxInstance);
void dealloc_Nhtsec_EcdsaGenerateKeyInMsg        (TNhtsec_EcdsaGenerateKeyInMsg        * pxInstance);
void dealloc_Nhtsec_EcdsaGenerateKeyOutMsg       (TNhtsec_EcdsaGenerateKeyOutMsg       * pxInstance);
void dealloc_Nhtsec_EcdsaSignInMsg               (TNhtsec_EcdsaSignInMsg               * pxInstance);
void dealloc_Nhtsec_EcdsaSignOutMsg              (TNhtsec_EcdsaSignOutMsg              * pxInstance);
void dealloc_Nhtsec_EcdsaVerifyInMsg             (TNhtsec_EcdsaVerifyInMsg             * pxInstance);
void dealloc_Nhtsec_EcdhGenerateInMsg            (TNhtsec_EcdhGenerateInMsg            * pxInstance);
void dealloc_Nhtsec_EcdhGenerateOutMsg           (TNhtsec_EcdhGenerateOutMsg           * pxInstance);
void dealloc_Nhtsec_EcdhComputeKeyInMsg          (TNhtsec_EcdhComputeKeyInMsg          * pxInstance);
void dealloc_Nhtsec_HandleInMsg                  (TNhtsec_HandleInMsg                  * pxInstance);
void dealloc_Nhtsec_SetClearTextKeyInMsg         (TNhtsec_SetClearTextKeyInMsg         * pxInstance);
void dealloc_Nhtsec_Set2LevelProtectedKeyInMsg   (TNhtsec_Set2LevelProtectedKeyInMsg   * pxInstance);
void dealloc_Nhtsec_UseCertKeyInMsg              (TNhtsec_UseCertKeyInMsg              * pxInstance);
void dealloc_Nhtsec_SessionCryptoProcessInMsg    (TNhtsec_SessionCryptoProcessInMsg    * pxInstance);
void dealloc_Nhtsec_UseFlashProtKeyInMsg         (TNhtsec_UseFlashProtKeyInMsg         * pxInstance);
void dealloc_Nhtsec_R2rMonteCarloParamsInMsg     (TNhtsec_R2rMonteCarloParamsInMsg     * pxInstance);
void dealloc_Nhtsec_R2rMonteCarloRunInMsg        (TNhtsec_R2rMonteCarloRunInMsg        * pxInstance);
void dealloc_Nhtsec_TransportIdOutMsg            (TNhtsec_TransportIdOutMsg            * pxInstance);
void dealloc_Nhtsec_TransportIdInMsg             (TNhtsec_TransportIdInMsg             * pxInstance);
void dealloc_Nhtsec_StreamSessionOpenInMsg       (TNhtsec_StreamSessionOpenInMsg       * pxInstance);
void dealloc_Nhtsec_Set0LevelProtectedKeyInMsg   (TNhtsec_Set0LevelProtectedKeyInMsg   * pxInstance);
void dealloc_Nhtsec_Set1LevelProtectedKeyInMsg   (TNhtsec_Set1LevelProtectedKeyInMsg   * pxInstance);
void dealloc_Nhtsec_SetMetadataInMsg             (TNhtsec_SetMetadataInMsg             * pxInstance);
void dealloc_Nhtsec_SizeInMsg                    (TNhtsec_SizeInMsg                    * pxInstance);
void dealloc_Nhtsec_EcmCallBackMsg               (TNhtsec_EcmCallBackMsg               * pxInstance);
void dealloc_Nhtsec_DemuxServiceInfoMsg          (TNhtsec_DemuxServiceInfoMsg          * pxInstance);
void dealloc_Nhtsec_DemuxEcmInfoMsg              (TNhtsec_DemuxEcmInfoMsg              * pxInstance);
void dealloc_Nhtsec_OpenDscTransportSessionInMsg (TNhtsec_OpenDscTransportSessionInMsg * pxInstance);
void dealloc_Nhtsec_OpenScrTransportSessionInMsg (TNhtsec_OpenScrTransportSessionInMsg * pxInstance);
void dealloc_Nhtsec_WaitOnCompletionInMsg        (TNhtsec_WaitOnCompletionInMsg        * pxInstance);
void dealloc_Nhtsec_SetIvInMsg                   (TNhtsec_SetIvInMsg                   * pxInstance);

/*****************************************************************************
 * msgbuf enum test function prototype                                       *
 ****************************************************************************/


#ifdef __cplusplus
}
#endif /* __cplusplus */


#endif /* _MSGBUF_NHTSEC_H_ */
